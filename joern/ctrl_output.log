{"lineNumber":229,"condition":["unlikely(!result)"],"assignments":[{"code":"result = __getname()","lineNumber":228}]}
{"lineNumber":232,"condition":["len <= EMBEDDED_NAME_MAX"],"assignments":[]}
{"lineNumber":234,"condition":["len <= PATH_MAX"],"assignments":[{"code":"len = strlen(filename) + 1","lineNumber":226},{"code":"const char * filename","lineNumber":223}]}
{"lineNumber":239,"condition":["unlikely(!tmp)"],"assignments":[{"code":"tmp = kmalloc(size, GFP_KERNEL)","lineNumber":238}]}
{"lineNumber":261,"condition":["IS_ERR(name)"],"assignments":[{"code":"struct filename *name","lineNumber":259}]}
{"lineNumber":266,"condition":["--name->refcnt > 0"],"assignments":[{"code":"struct filename *name","lineNumber":259}]}
{"lineNumber":269,"condition":["name->name != name->iname"],"assignments":[{"code":"struct filename *name","lineNumber":259},{"code":"struct filename *name","lineNumber":259}]}
{"lineNumber":346,"condition":["likely(vfsuid_eq_kuid(vfsuid, current_fsuid()))"],"assignments":[{"code":"vfsuid = i_uid_into_vfsuid(idmap, inode)","lineNumber":345},{"code":"struct mnt_idmap *idmap","lineNumber":338},{"code":"struct inode *inode","lineNumber":339}]}
{"lineNumber":353,"condition":["IS_POSIXACL(inode) && (mode & S_IRWXG)"],"assignments":[{"code":"struct inode *inode","lineNumber":339},{"code":"mode = inode->i_mode","lineNumber":341},{"code":"struct mnt_idmap *idmap","lineNumber":338}]}
{"lineNumber":355,"condition":["error != -EAGAIN"],"assignments":[{"code":"error = check_acl(idmap, inode, mask)","lineNumber":354},{"code":"struct inode *inode","lineNumber":339},{"code":"int mask","lineNumber":339},{"code":"struct mnt_idmap *idmap","lineNumber":338}]}
{"lineNumber":367,"condition":["mask & (mode ^ (mode >> 3))"],"assignments":[{"code":"int mask","lineNumber":339},{"code":"mode = inode->i_mode","lineNumber":341},{"code":"struct inode *inode","lineNumber":339}]}
{"lineNumber":369,"condition":["vfsgid_in_group_p(vfsgid)"],"assignments":[{"code":"vfsgid = i_gid_into_vfsgid(idmap, inode)","lineNumber":368},{"code":"struct inode *inode","lineNumber":339},{"code":"struct mnt_idmap *idmap","lineNumber":338}]}
{"lineNumber":408,"condition":["ret != -EACCES"],"assignments":[{"code":"ret = acl_permission_check(idmap, inode, mask)","lineNumber":407},{"code":"struct mnt_idmap *idmap","lineNumber":399},{"code":"struct inode *inode","lineNumber":399},{"code":"int mask","lineNumber":400}]}
{"lineNumber":411,"condition":["S_ISDIR(inode->i_mode)"],"assignments":[{"code":"struct inode *inode","lineNumber":399}]}
{"lineNumber":413,"condition":["!(mask & MAY_WRITE)"],"assignments":[{"code":"int mask","lineNumber":400}]}
{"lineNumber":414,"condition":["capable_wrt_inode_uidgid(idmap, inode,\n\t\t\t\t\t\t     CAP_DAC_READ_SEARCH)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":399},{"code":"struct inode *inode","lineNumber":399}]}
{"lineNumber":417,"condition":["capable_wrt_inode_uidgid(idmap, inode,\n\t\t\t\t\t     CAP_DAC_OVERRIDE)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":399},{"code":"struct inode *inode","lineNumber":399}]}
{"lineNumber":427,"condition":["mask == MAY_READ"],"assignments":[{"code":"int mask","lineNumber":400}]}
{"lineNumber":428,"condition":["capable_wrt_inode_uidgid(idmap, inode,\n\t\t\t\t\t     CAP_DAC_READ_SEARCH)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":399},{"code":"struct inode *inode","lineNumber":399}]}
{"lineNumber":436,"condition":["!(mask & MAY_EXEC) || (inode->i_mode & S_IXUGO)"],"assignments":[{"code":"struct inode *inode","lineNumber":399},{"code":"int mask","lineNumber":400},{"code":"struct mnt_idmap *idmap","lineNumber":399}]}
{"lineNumber":437,"condition":["capable_wrt_inode_uidgid(idmap, inode,\n\t\t\t\t\t     CAP_DAC_OVERRIDE)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":399},{"code":"struct inode *inode","lineNumber":399}]}
{"lineNumber":459,"condition":["unlikely(!(inode->i_opflags & IOP_FASTPERM))"],"assignments":[{"code":"struct inode *inode","lineNumber":457}]}
{"lineNumber":460,"condition":["likely(inode->i_op->permission)"],"assignments":[{"code":"struct inode *inode","lineNumber":457}]}
{"lineNumber":481,"condition":["unlikely(mask & MAY_WRITE)"],"assignments":[{"code":"int mask","lineNumber":479}]}
{"lineNumber":485,"condition":["sb_rdonly(sb) && (S_ISREG(mode) || S_ISDIR(mode) || S_ISLNK(mode))"],"assignments":[{"code":"struct super_block *sb","lineNumber":479},{"code":"mode = inode->i_mode","lineNumber":482},{"code":"struct inode *inode","lineNumber":479}]}
{"lineNumber":509,"condition":["retval"],"assignments":[]}
{"lineNumber":512,"condition":["unlikely(mask & MAY_WRITE)"],"assignments":[{"code":"int mask","lineNumber":504}]}
{"lineNumber":516,"condition":["IS_IMMUTABLE(inode)"],"assignments":[{"code":"struct inode *inode","lineNumber":504},{"code":"struct inode *inode","lineNumber":504}]}
{"lineNumber":524,"condition":["HAS_UNMAPPED_ID(idmap, inode)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":503},{"code":"struct inode *inode","lineNumber":504}]}
{"lineNumber":529,"condition":["retval"],"assignments":[]}
{"lineNumber":533,"condition":["retval"],"assignments":[]}
{"lineNumber":614,"condition":["unlikely(root)"],"assignments":[{"code":"const struct path *root","lineNumber":610}]}
{"lineNumber":625,"condition":["old"],"assignments":[]}
{"lineNumber":627,"condition":["now->stack != now->internal"],"assignments":[{"code":"*now = current->nameidata","lineNumber":622},{"code":"*now = current->nameidata","lineNumber":622}]}
{"lineNumber":637,"condition":["unlikely(!p)"],"assignments":[{"code":"p= kmalloc_array(MAXSYMLINKS, sizeof(struct saved),\n\t\t\t nd->flags & LOOKUP_RCU ? GFP_ATOMIC : GFP_KERNEL)","lineNumber":635},{"code":"struct nameidata *nd","lineNumber":631}]}
{"lineNumber":655,"condition":["mnt->mnt_root == sb->s_root"],"assignments":[{"code":"struct vfsmount *mnt","lineNumber":650},{"code":"*sb = mnt->mnt_sb","lineNumber":652}]}
{"lineNumber":681,"condition":["!(nd->flags & LOOKUP_RCU)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":678}]}
{"lineNumber":686,"condition":["nd->state & ND_ROOT_GRABBED"],"assignments":[{"code":"struct nameidata *nd","lineNumber":678}]}
{"lineNumber":702,"condition":["unlikely(res)"],"assignments":[{"code":"res = __legitimize_mnt(path->mnt, mseq)","lineNumber":701},{"code":"struct path *path","lineNumber":699},{"code":"unsigned mseq","lineNumber":699}]}
{"lineNumber":703,"condition":["res > 0"],"assignments":[{"code":"res = __legitimize_mnt(path->mnt, mseq)","lineNumber":701},{"code":"struct path *path","lineNumber":699},{"code":"unsigned mseq","lineNumber":699}]}
{"lineNumber":708,"condition":["unlikely(!lockref_get_not_dead(&path->dentry->d_lockref))"],"assignments":[{"code":"struct path *path","lineNumber":699}]}
{"lineNumber":724,"condition":["unlikely(nd->flags & LOOKUP_CACHED)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":721}]}
{"lineNumber":731,"condition":["unlikely(!legitimize_path(nd, &last->link, last->seq))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":721},{"code":"*last = nd->stack + i","lineNumber":730},{"code":"*last = nd->stack + i","lineNumber":730},{"code":"i = 0","lineNumber":729},{"code":"i = 0","lineNumber":729}]}
{"lineNumber":743,"condition":["!nd->root.mnt || (nd->state & ND_ROOT_PRESET)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":740},{"code":"struct nameidata *nd","lineNumber":740}]}
{"lineNumber":777,"condition":["unlikely(!legitimize_links(nd))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":771}]}
{"lineNumber":779,"condition":["unlikely(!legitimize_path(nd, &nd->path, nd->seq))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":771},{"code":"struct nameidata *nd","lineNumber":771},{"code":"struct nameidata *nd","lineNumber":771},{"code":"struct nameidata *nd","lineNumber":771},{"code":"struct nameidata *nd","lineNumber":771},{"code":"struct nameidata *nd","lineNumber":771}]}
{"lineNumber":781,"condition":["unlikely(!legitimize_root(nd))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":771},{"code":"struct nameidata *nd","lineNumber":771}]}
{"lineNumber":812,"condition":["unlikely(!legitimize_links(nd))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":807}]}
{"lineNumber":815,"condition":["unlikely(res)"],"assignments":[{"code":"res = __legitimize_mnt(nd->path.mnt, nd->m_seq)","lineNumber":814},{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807}]}
{"lineNumber":816,"condition":["res > 0"],"assignments":[{"code":"res = __legitimize_mnt(nd->path.mnt, nd->m_seq)","lineNumber":814},{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807}]}
{"lineNumber":820,"condition":["unlikely(!lockref_get_not_dead(&nd->path.dentry->d_lockref))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807}]}
{"lineNumber":830,"condition":["unlikely(!lockref_get_not_dead(&dentry->d_lockref))"],"assignments":[{"code":"struct dentry *dentry","lineNumber":807}]}
{"lineNumber":832,"condition":["read_seqcount_retry(&dentry->d_seq, nd->next_seq)"],"assignments":[{"code":"struct dentry *dentry","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807}]}
{"lineNumber":838,"condition":["unlikely(!legitimize_root(nd))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":807},{"code":"struct nameidata *nd","lineNumber":807}]}
{"lineNumber":858,"condition":["unlikely(dentry->d_flags & DCACHE_OP_REVALIDATE)"],"assignments":[{"code":"struct dentry *dentry","lineNumber":856}]}
{"lineNumber":879,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":884,"condition":["!(nd->state & ND_ROOT_PRESET)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":885,"condition":["!(nd->flags & LOOKUP_IS_SCOPED)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":888,"condition":["!try_to_unlazy(nd)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":892,"condition":["unlikely(nd->flags & LOOKUP_IS_SCOPED)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":909,"condition":["!path_is_under(&nd->path, &nd->root)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":874},{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":913,"condition":["likely(!(nd->state & ND_JUMPED))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":916,"condition":["likely(!(dentry->d_flags & DCACHE_OP_WEAK_REVALIDATE))"],"assignments":[{"code":"*dentry = nd->path.dentry","lineNumber":876},{"code":"struct nameidata *nd","lineNumber":874}]}
{"lineNumber":920,"condition":["status > 0"],"assignments":[{"code":"status = dentry->d_op->d_weak_revalidate(dentry, nd->flags)","lineNumber":919},{"code":"struct nameidata *nd","lineNumber":874},{"code":"*dentry = nd->path.dentry","lineNumber":876},{"code":"*dentry = nd->path.dentry","lineNumber":876}]}
{"lineNumber":923,"condition":["!status"],"assignments":[{"code":"status = dentry->d_op->d_weak_revalidate(dentry, nd->flags)","lineNumber":919},{"code":"struct nameidata *nd","lineNumber":874},{"code":"*dentry = nd->path.dentry","lineNumber":876},{"code":"*dentry = nd->path.dentry","lineNumber":876}]}
{"lineNumber":938,"condition":["WARN_ON(nd->flags & LOOKUP_IS_SCOPED)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":929}]}
{"lineNumber":941,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":929}]}
{"lineNumber":958,"condition":["unlikely(nd->flags & LOOKUP_BENEATH)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":956}]}
{"lineNumber":960,"condition":["unlikely(nd->flags & LOOKUP_NO_XDEV)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":956}]}
{"lineNumber":962,"condition":["nd->path.mnt != NULL && nd->path.mnt != nd->root.mnt"],"assignments":[{"code":"struct nameidata *nd","lineNumber":956},{"code":"struct nameidata *nd","lineNumber":956},{"code":"struct nameidata *nd","lineNumber":956}]}
{"lineNumber":965,"condition":["!nd->root.mnt"],"assignments":[{"code":"struct nameidata *nd","lineNumber":956}]}
{"lineNumber":967,"condition":["error"],"assignments":[]}
{"lineNumber":970,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":956}]}
{"lineNumber":976,"condition":["read_seqcount_retry(&d->d_seq, nd->seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":956},{"code":"d = nd->path.dentry","lineNumber":973}]}
{"lineNumber":997,"condition":["unlikely(nd->flags & LOOKUP_NO_MAGICLINKS)"],"assignments":[{"code":"*nd = current->nameidata","lineNumber":995}]}
{"lineNumber":1001,"condition":["unlikely(nd->flags & LOOKUP_NO_XDEV)"],"assignments":[{"code":"*nd = current->nameidata","lineNumber":995}]}
{"lineNumber":1002,"condition":["nd->path.mnt != path->mnt"],"assignments":[{"code":"const struct path *path","lineNumber":992},{"code":"*nd = current->nameidata","lineNumber":995}]}
{"lineNumber":1006,"condition":["unlikely(nd->flags & LOOKUP_IS_SCOPED)"],"assignments":[{"code":"*nd = current->nameidata","lineNumber":995}]}
{"lineNumber":1024,"condition":["!(nd->flags & LOOKUP_RCU)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1020}]}
{"lineNumber":1103,"condition":["!sysctl_protected_symlinks"],"assignments":[]}
{"lineNumber":1109,"condition":["vfsuid_eq_kuid(vfsuid, current_fsuid())"],"assignments":[{"code":"vfsuid = i_uid_into_vfsuid(idmap, inode)","lineNumber":1107},{"code":"const struct inode *inode","lineNumber":1098},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":1106},{"code":"struct nameidata *nd","lineNumber":1098}]}
{"lineNumber":1113,"condition":["(nd->dir_mode & (S_ISVTX|S_IWOTH)) != (S_ISVTX|S_IWOTH)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1098}]}
{"lineNumber":1117,"condition":["vfsuid_valid(nd->dir_vfsuid) && vfsuid_eq(nd->dir_vfsuid, vfsuid)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1098},{"code":"struct nameidata *nd","lineNumber":1098},{"code":"vfsuid = i_uid_into_vfsuid(idmap, inode)","lineNumber":1107},{"code":"const struct inode *inode","lineNumber":1098},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":1106}]}
{"lineNumber":1120,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1098}]}
{"lineNumber":1147,"condition":["!S_ISREG(mode)"],"assignments":[{"code":"mode = inode->i_mode","lineNumber":1144},{"code":"struct inode *inode","lineNumber":1142}]}
{"lineNumber":1151,"condition":["mode & S_ISUID"],"assignments":[{"code":"mode = inode->i_mode","lineNumber":1144},{"code":"struct inode *inode","lineNumber":1142}]}
{"lineNumber":1155,"condition":["(mode & (S_ISGID | S_IXGRP)) == (S_ISGID | S_IXGRP)"],"assignments":[{"code":"mode = inode->i_mode","lineNumber":1144},{"code":"struct inode *inode","lineNumber":1142}]}
{"lineNumber":1159,"condition":["inode_permission(idmap, inode, MAY_READ | MAY_WRITE)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":1141},{"code":"struct inode *inode","lineNumber":1142}]}
{"lineNumber":1189,"condition":["!vfsuid_valid(i_uid_into_vfsuid(idmap, inode)) ||\n\t    !vfsgid_valid(i_gid_into_vfsgid(idmap, inode))"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":1184},{"code":"*inode = link->dentry->d_inode","lineNumber":1186},{"code":"const struct path *link","lineNumber":1184}]}
{"lineNumber":1193,"condition":["!sysctl_protected_hardlinks"],"assignments":[]}
{"lineNumber":1199,"condition":["safe_hardlink_source(idmap, inode) ||\n\t    inode_owner_or_capable(idmap, inode)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":1184},{"code":"*inode = link->dentry->d_inode","lineNumber":1186},{"code":"const struct path *link","lineNumber":1184}]}
{"lineNumber":1240,"condition":["(!sysctl_protected_fifos && S_ISFIFO(inode->i_mode)) ||\n\t    (!sysctl_protected_regular && S_ISREG(inode->i_mode)) ||\n\t    likely(!(dir_mode & S_ISVTX)) ||\n\t    vfsuid_eq(i_uid_into_vfsuid(idmap, inode), dir_vfsuid) ||\n\t    vfsuid_eq_kuid(i_uid_into_vfsuid(idmap, inode), current_fsuid())"],"assignments":[{"code":"struct inode *const inode","lineNumber":1235},{"code":"struct inode *const inode","lineNumber":1235},{"code":"struct mnt_idmap *idmap","lineNumber":1234},{"code":"struct inode *const inode","lineNumber":1235},{"code":"struct mnt_idmap *idmap","lineNumber":1234},{"code":"struct inode *const inode","lineNumber":1235},{"code":"dir_mode = nd->dir_mode","lineNumber":1237},{"code":"dir_vfsuid = nd->dir_vfsuid","lineNumber":1238},{"code":"struct nameidata *nd","lineNumber":1235},{"code":"struct nameidata *nd","lineNumber":1235}]}
{"lineNumber":1247,"condition":["likely(dir_mode & 0002) ||\n\t    (dir_mode & 0020 &&\n\t     ((sysctl_protected_fifos >= 2 && S_ISFIFO(inode->i_mode)) ||\n\t      (sysctl_protected_regular >= 2 && S_ISREG(inode->i_mode))))"],"assignments":[{"code":"struct inode *const inode","lineNumber":1235},{"code":"struct inode *const inode","lineNumber":1235},{"code":"dir_mode = nd->dir_mode","lineNumber":1237},{"code":"struct nameidata *nd","lineNumber":1235},{"code":"struct mnt_idmap *idmap","lineNumber":1234},{"code":"struct mnt_idmap *idmap","lineNumber":1234},{"code":"struct mnt_idmap *idmap","lineNumber":1234},{"code":"struct mnt_idmap *idmap","lineNumber":1234}]}
{"lineNumber":1278,"condition":["parent == mnt"],"assignments":[{"code":"parent = mnt->mnt_parent","lineNumber":1277},{"code":"*mnt = real_mount(path->mnt)","lineNumber":1272},{"code":"struct path *path","lineNumber":1270}]}
{"lineNumber":1300,"condition":["unlikely(root->dentry == mountpoint &&\n\t\t\t     root->mnt == &m->mnt)"],"assignments":[{"code":"const struct path *root","lineNumber":1293},{"code":"const struct path *root","lineNumber":1293},{"code":"*mountpoint = m->mnt_mountpoint","lineNumber":1297},{"code":"m = m->mnt_parent","lineNumber":1299},{"code":"struct mount *m","lineNumber":1293}]}
{"lineNumber":1303,"condition":["mountpoint != m->mnt.mnt_root"],"assignments":[{"code":"m = m->mnt_parent","lineNumber":1299},{"code":"struct mount *m","lineNumber":1293},{"code":"*mountpoint = m->mnt_mountpoint","lineNumber":1297},{"code":"const struct path *root","lineNumber":1293}]}
{"lineNumber":1323,"condition":["unlikely(!found)"],"assignments":[{"code":"found = choose_mountpoint_rcu(m, root, path, &seq)","lineNumber":1322},{"code":"struct mount *m","lineNumber":1313},{"code":"const struct path *root","lineNumber":1313},{"code":"struct path *path","lineNumber":1314}]}
{"lineNumber":1324,"condition":["!read_seqretry(&mount_lock, mseq)"],"assignments":[{"code":"mseq = read_seqbegin(&mount_lock)","lineNumber":1320}]}
{"lineNumber":1327,"condition":["likely(__legitimize_path(path, seq, mseq))"],"assignments":[{"code":"struct path *path","lineNumber":1314},{"code":"mseq = read_seqbegin(&mount_lock)","lineNumber":1320}]}
{"lineNumber":1358,"condition":["!(lookup_flags & (LOOKUP_PARENT | LOOKUP_DIRECTORY |\n\t\t\t   LOOKUP_OPEN | LOOKUP_CREATE | LOOKUP_AUTOMOUNT)) &&\n\t    dentry->d_inode"],"assignments":[{"code":"unsigned lookup_flags","lineNumber":1343},{"code":"*dentry = path->dentry","lineNumber":1345},{"code":"struct path *path","lineNumber":1343}]}
{"lineNumber":1363,"condition":["count && (*count)++ >= MAXSYMLINKS"],"assignments":[{"code":"int *count","lineNumber":1343},{"code":"int *count","lineNumber":1343}]}
{"lineNumber":1385,"condition":["flags & DCACHE_MANAGE_TRANSIT"],"assignments":[{"code":"unsigned flags","lineNumber":1375},{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1412},{"code":"flags = path->dentry->d_flags","lineNumber":1401},{"code":"struct path *path","lineNumber":1375}]}
{"lineNumber":1388,"condition":["ret < 0"],"assignments":[{"code":"ret = path->dentry->d_op->d_manage(path, false)","lineNumber":1386},{"code":"struct path *path","lineNumber":1375},{"code":"struct path *path","lineNumber":1375}]}
{"lineNumber":1392,"condition":["flags & DCACHE_MOUNTED"],"assignments":[{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1387},{"code":"unsigned flags","lineNumber":1375},{"code":"struct path *path","lineNumber":1375},{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1412},{"code":"flags = path->dentry->d_flags","lineNumber":1401}]}
{"lineNumber":1394,"condition":["mounted"],"assignments":[]}
{"lineNumber":1396,"condition":["need_mntput"],"assignments":[]}
{"lineNumber":1407,"condition":["!(flags & DCACHE_NEED_AUTOMOUNT)"],"assignments":[{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1387},{"code":"unsigned flags","lineNumber":1375},{"code":"struct path *path","lineNumber":1375},{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1412},{"code":"flags = path->dentry->d_flags","lineNumber":1401}]}
{"lineNumber":1413,"condition":["ret < 0"],"assignments":[{"code":"ret = follow_automount(path, count, lookup_flags)","lineNumber":1411},{"code":"struct path *path","lineNumber":1375},{"code":"int *count","lineNumber":1376},{"code":"unsigned lookup_flags","lineNumber":1376}]}
{"lineNumber":1417,"condition":["ret == -EISDIR"],"assignments":[{"code":"ret = 0","lineNumber":1380},{"code":"ret = path->dentry->d_op->d_manage(path, false)","lineNumber":1386},{"code":"ret = follow_automount(path, count, lookup_flags)","lineNumber":1411},{"code":"struct path *path","lineNumber":1375},{"code":"struct path *path","lineNumber":1375},{"code":"struct path *path","lineNumber":1375},{"code":"int *count","lineNumber":1376},{"code":"unsigned lookup_flags","lineNumber":1376}]}
{"lineNumber":1420,"condition":["need_mntput && path->mnt == mnt"],"assignments":[{"code":"struct path *path","lineNumber":1375},{"code":"need_mntput = false","lineNumber":1379},{"code":"need_mntput = true","lineNumber":1402},{"code":"*mnt = path->mnt","lineNumber":1378}]}
{"lineNumber":1422,"condition":["!ret && unlikely(d_flags_negative(flags))"],"assignments":[{"code":"ret = 0","lineNumber":1418},{"code":"unsigned flags","lineNumber":1375},{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1387},{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1412},{"code":"ret = 0","lineNumber":1380},{"code":"flags = path->dentry->d_flags","lineNumber":1401},{"code":"struct path *path","lineNumber":1375},{"code":"struct path *path","lineNumber":1375},{"code":"ret = path->dentry->d_op->d_manage(path, false)","lineNumber":1386},{"code":"ret = follow_automount(path, count, lookup_flags)","lineNumber":1411},{"code":"int *count","lineNumber":1376},{"code":"unsigned lookup_flags","lineNumber":1376}]}
{"lineNumber":1434,"condition":["likely(!(flags & DCACHE_MANAGED_DENTRY))"],"assignments":[{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1431},{"code":"struct path *path","lineNumber":1428}]}
{"lineNumber":1436,"condition":["unlikely(d_flags_negative(flags))"],"assignments":[{"code":"flags = smp_load_acquire(&path->dentry->d_flags)","lineNumber":1431},{"code":"struct path *path","lineNumber":1428}]}
{"lineNumber":1448,"condition":["mounted"],"assignments":[]}
{"lineNumber":1470,"condition":["path->mnt != mnt"],"assignments":[{"code":"struct path *path","lineNumber":1464},{"code":"*mnt = path->mnt","lineNumber":1466}]}
{"lineNumber":1485,"condition":["likely(!(flags & DCACHE_MANAGED_DENTRY))"],"assignments":[{"code":"flags = dentry->d_flags","lineNumber":1483},{"code":"*dentry = path->dentry","lineNumber":1482},{"code":"struct path *path","lineNumber":1480}]}
{"lineNumber":1488,"condition":["unlikely(nd->flags & LOOKUP_NO_XDEV)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1480}]}
{"lineNumber":1496,"condition":["unlikely(flags & DCACHE_MANAGE_TRANSIT)"],"assignments":[{"code":"flags = dentry->d_flags","lineNumber":1510},{"code":"flags = dentry->d_flags","lineNumber":1483},{"code":"dentry = path->dentry = mounted->mnt.mnt_root","lineNumber":1507},{"code":"*dentry = path->dentry","lineNumber":1482},{"code":"struct path *path","lineNumber":1480},{"code":"struct path *path","lineNumber":1480}]}
{"lineNumber":1498,"condition":["res"],"assignments":[]}
{"lineNumber":1503,"condition":["flags & DCACHE_MOUNTED"],"assignments":[{"code":"flags = dentry->d_flags","lineNumber":1500},{"code":"flags = dentry->d_flags","lineNumber":1510},{"code":"flags = dentry->d_flags","lineNumber":1483},{"code":"*dentry = path->dentry","lineNumber":1482},{"code":"dentry = path->dentry = mounted->mnt.mnt_root","lineNumber":1507},{"code":"struct path *path","lineNumber":1480},{"code":"struct path *path","lineNumber":1480}]}
{"lineNumber":1505,"condition":["mounted"],"assignments":[]}
{"lineNumber":1513,"condition":["read_seqretry(&mount_lock, nd->m_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1480}]}
{"lineNumber":1517,"condition":["read_seqretry(&mount_lock, nd->m_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1480}]}
{"lineNumber":1532,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1524}]}
{"lineNumber":1534,"condition":["likely(__follow_mount_rcu(nd, path))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1524},{"code":"struct path *path","lineNumber":1525}]}
{"lineNumber":1540,"condition":["!try_to_unlazy_next(nd, dentry)"],"assignments":[{"code":"struct dentry *dentry","lineNumber":1524},{"code":"struct nameidata *nd","lineNumber":1524},{"code":"struct nameidata *nd","lineNumber":1524},{"code":"struct nameidata *nd","lineNumber":1524}]}
{"lineNumber":1544,"condition":["jumped"],"assignments":[]}
{"lineNumber":1545,"condition":["unlikely(nd->flags & LOOKUP_NO_XDEV)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1524}]}
{"lineNumber":1550,"condition":["unlikely(ret)"],"assignments":[{"code":"ret = traverse_mounts(path, &jumped, &nd->total_link_count, nd->flags)","lineNumber":1543},{"code":"ret = -EXDEV","lineNumber":1546},{"code":"struct path *path","lineNumber":1525},{"code":"struct nameidata *nd","lineNumber":1524},{"code":"struct nameidata *nd","lineNumber":1524}]}
{"lineNumber":1552,"condition":["path->mnt != nd->path.mnt"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1524},{"code":"struct path *path","lineNumber":1525},{"code":"struct path *path","lineNumber":1525}]}
{"lineNumber":1567,"condition":["dentry"],"assignments":[]}
{"lineNumber":1569,"condition":["unlikely(error <= 0)"],"assignments":[{"code":"error = d_revalidate(dentry, flags)","lineNumber":1568},{"code":"unsigned int flags","lineNumber":1564},{"code":"*dentry = d_lookup(dir, name)","lineNumber":1566},{"code":"struct dentry *dir","lineNumber":1563},{"code":"const struct qstr *name","lineNumber":1562}]}
{"lineNumber":1570,"condition":["!error"],"assignments":[{"code":"error = d_revalidate(dentry, flags)","lineNumber":1568},{"code":"unsigned int flags","lineNumber":1564},{"code":"*dentry = d_lookup(dir, name)","lineNumber":1566}]}
{"lineNumber":1594,"condition":["dentry"],"assignments":[]}
{"lineNumber":1598,"condition":["unlikely(IS_DEADDIR(dir))"],"assignments":[{"code":"*dir = base->d_inode","lineNumber":1592},{"code":"struct dentry *base","lineNumber":1587}]}
{"lineNumber":1602,"condition":["unlikely(!dentry)"],"assignments":[{"code":"dentry = d_alloc(base, name)","lineNumber":1601},{"code":"struct dentry *base","lineNumber":1587},{"code":"const struct qstr *name","lineNumber":1586}]}
{"lineNumber":1606,"condition":["unlikely(old)"],"assignments":[{"code":"old = dir->i_op->lookup(dir, dentry, flags)","lineNumber":1605},{"code":"unsigned int flags","lineNumber":1588},{"code":"*dir = base->d_inode","lineNumber":1592},{"code":"*dir = base->d_inode","lineNumber":1592},{"code":"dentry = d_alloc(base, name)","lineNumber":1601}]}
{"lineNumber":1624,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1614}]}
{"lineNumber":1626,"condition":["unlikely(!dentry)"],"assignments":[{"code":"dentry = __d_lookup_rcu(parent, &nd->last, &nd->next_seq)","lineNumber":1625},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"*parent = nd->path.dentry","lineNumber":1616}]}
{"lineNumber":1627,"condition":["!try_to_unlazy(nd)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1614}]}
{"lineNumber":1636,"condition":["read_seqcount_retry(&parent->d_seq, nd->seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1614},{"code":"*parent = nd->path.dentry","lineNumber":1616}]}
{"lineNumber":1640,"condition":["likely(status > 0)"],"assignments":[{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1639},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"dentry = __d_lookup_rcu(parent, &nd->last, &nd->next_seq)","lineNumber":1625}]}
{"lineNumber":1642,"condition":["!try_to_unlazy_next(nd, dentry)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1614},{"code":"dentry = __d_lookup_rcu(parent, &nd->last, &nd->next_seq)","lineNumber":1625}]}
{"lineNumber":1644,"condition":["status == -ECHILD"],"assignments":[{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1639},{"code":"struct nameidata *nd","lineNumber":1614}]}
{"lineNumber":1649,"condition":["unlikely(!dentry)"],"assignments":[{"code":"dentry = __d_lookup(parent, &nd->last)","lineNumber":1648},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"*parent = nd->path.dentry","lineNumber":1616}]}
{"lineNumber":1653,"condition":["unlikely(status <= 0)"],"assignments":[{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1651},{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1646},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1639},{"code":"dentry = __d_lookup(parent, &nd->last)","lineNumber":1648}]}
{"lineNumber":1654,"condition":["!status"],"assignments":[{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1651},{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1646},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"struct nameidata *nd","lineNumber":1614},{"code":"status = d_revalidate(dentry, nd->flags)","lineNumber":1639}]}
{"lineNumber":1672,"condition":["unlikely(IS_DEADDIR(inode))"],"assignments":[{"code":"*inode = dir->d_inode","lineNumber":1668},{"code":"struct dentry *dir","lineNumber":1664}]}
{"lineNumber":1676,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = d_alloc_parallel(dir, name, &wq)","lineNumber":1675},{"code":"struct dentry *dir","lineNumber":1664},{"code":"const struct qstr *name","lineNumber":1663}]}
{"lineNumber":1678,"condition":["unlikely(!d_in_lookup(dentry))"],"assignments":[{"code":"dentry = d_alloc_parallel(dir, name, &wq)","lineNumber":1675},{"code":"struct dentry *dir","lineNumber":1664},{"code":"const struct qstr *name","lineNumber":1663}]}
{"lineNumber":1680,"condition":["unlikely(error <= 0)"],"assignments":[{"code":"error = d_revalidate(dentry, flags)","lineNumber":1679},{"code":"unsigned int flags","lineNumber":1665}]}
{"lineNumber":1681,"condition":["!error"],"assignments":[{"code":"error = d_revalidate(dentry, flags)","lineNumber":1679},{"code":"unsigned int flags","lineNumber":1665}]}
{"lineNumber":1692,"condition":["unlikely(old)"],"assignments":[{"code":"old = inode->i_op->lookup(inode, dentry, flags)","lineNumber":1690},{"code":"unsigned int flags","lineNumber":1665},{"code":"*inode = dir->d_inode","lineNumber":1668},{"code":"*inode = dir->d_inode","lineNumber":1668}]}
{"lineNumber":1715,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1713}]}
{"lineNumber":1717,"condition":["err != -ECHILD || !try_to_unlazy(nd)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1713},{"code":"err = inode_permission(idmap, nd->inode, MAY_EXEC|MAY_NOT_BLOCK)","lineNumber":1716},{"code":"struct mnt_idmap *idmap","lineNumber":1712}]}
{"lineNumber":1725,"condition":["unlikely(nd->total_link_count++ >= MAXSYMLINKS)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1723}]}
{"lineNumber":1728,"condition":["likely(nd->depth != EMBEDDED_LEVELS)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1723}]}
{"lineNumber":1730,"condition":["likely(nd->stack != nd->internal)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723}]}
{"lineNumber":1732,"condition":["likely(nd_alloc_stack(nd))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1723}]}
{"lineNumber":1735,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723}]}
{"lineNumber":1740,"condition":["!try_to_unlazy(nd) || !grabbed_link"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"grabbed_link = legitimize_path(nd, link, nd->next_seq)","lineNumber":1738},{"code":"struct path *link","lineNumber":1723}]}
{"lineNumber":1743,"condition":["nd_alloc_stack(nd)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723},{"code":"struct nameidata *nd","lineNumber":1723}]}
{"lineNumber":1758,"condition":["unlikely(error)"],"assignments":[{"code":"error = reserve_stack(nd, link)","lineNumber":1756},{"code":"struct nameidata *nd","lineNumber":1751},{"code":"struct path *link","lineNumber":1751}]}
{"lineNumber":1759,"condition":["!(nd->flags & LOOKUP_RCU)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1768,"condition":["flags & WALK_TRAILING"],"assignments":[{"code":"int flags","lineNumber":1752}]}
{"lineNumber":1770,"condition":["unlikely(error)"],"assignments":[{"code":"error = may_follow_link(nd, inode)","lineNumber":1769},{"code":"struct inode *inode","lineNumber":1752},{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1774,"condition":["unlikely(nd->flags & LOOKUP_NO_SYMLINKS) ||\n\t\t\tunlikely(link->mnt->mnt_flags & MNT_NOSYMFOLLOW)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1751},{"code":"struct path *link","lineNumber":1751}]}
{"lineNumber":1778,"condition":["!(nd->flags & LOOKUP_RCU)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1781,"condition":["atime_needs_update(&last->link, inode)"],"assignments":[{"code":"struct inode *inode","lineNumber":1752},{"code":"last = nd->stack + nd->depth++","lineNumber":1763},{"code":"struct nameidata *nd","lineNumber":1751},{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1782,"condition":["!try_to_unlazy(nd)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1789,"condition":["unlikely(error)"],"assignments":[{"code":"error = security_inode_follow_link(link->dentry, inode,\n\t\t\t\t\t   nd->flags & LOOKUP_RCU)","lineNumber":1787},{"code":"struct inode *inode","lineNumber":1752},{"code":"struct path *link","lineNumber":1751},{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1793,"condition":["!res"],"assignments":[{"code":"res = READ_ONCE(inode->i_link)","lineNumber":1792},{"code":"struct inode *inode","lineNumber":1752}]}
{"lineNumber":1797,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1799,"condition":["res == ERR_PTR(-ECHILD) && try_to_unlazy(nd)"],"assignments":[{"code":"res = get(NULL, inode, &last->done)","lineNumber":1798},{"code":"struct nameidata *nd","lineNumber":1751},{"code":"struct inode *inode","lineNumber":1752},{"code":"last = nd->stack + nd->depth++","lineNumber":1763}]}
{"lineNumber":1804,"condition":["!res"],"assignments":[{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1802},{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1800},{"code":"res = get(NULL, inode, &last->done)","lineNumber":1798},{"code":"struct path *link","lineNumber":1751},{"code":"struct inode *inode","lineNumber":1752},{"code":"last = nd->stack + nd->depth++","lineNumber":1763},{"code":"struct path *link","lineNumber":1751},{"code":"last = nd->stack + nd->depth++","lineNumber":1763}]}
{"lineNumber":1806,"condition":["IS_ERR(res)"],"assignments":[{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1802},{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1800},{"code":"res = get(NULL, inode, &last->done)","lineNumber":1798},{"code":"struct path *link","lineNumber":1751},{"code":"struct inode *inode","lineNumber":1752},{"code":"last = nd->stack + nd->depth++","lineNumber":1763},{"code":"struct path *link","lineNumber":1751},{"code":"last = nd->stack + nd->depth++","lineNumber":1763}]}
{"lineNumber":1809,"condition":["*res == '/'"],"assignments":[{"code":"res = READ_ONCE(inode->i_link)","lineNumber":1792},{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1802},{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1800},{"code":"struct inode *inode","lineNumber":1752},{"code":"res = get(NULL, inode, &last->done)","lineNumber":1798}]}
{"lineNumber":1811,"condition":["unlikely(error)"],"assignments":[{"code":"error = nd_jump_root(nd)","lineNumber":1810},{"code":"struct nameidata *nd","lineNumber":1751}]}
{"lineNumber":1816,"condition":["*res"],"assignments":[{"code":"res = READ_ONCE(inode->i_link)","lineNumber":1792},{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1802},{"code":"res = get(link->dentry, inode, &last->done)","lineNumber":1800},{"code":"struct inode *inode","lineNumber":1752},{"code":"res = get(NULL, inode, &last->done)","lineNumber":1798}]}
{"lineNumber":1838,"condition":["err < 0"],"assignments":[{"code":"err = handle_mounts(nd, dentry, &path)","lineNumber":1836},{"code":"struct nameidata *nd","lineNumber":1831},{"code":"struct dentry *dentry","lineNumber":1832}]}
{"lineNumber":1841,"condition":["likely(!d_is_symlink(path.dentry)) ||\n\t   ((flags & WALK_TRAILING) && !(nd->flags & LOOKUP_FOLLOW)) ||\n\t   (flags & WALK_NOFOLLOW)"],"assignments":[{"code":"int flags","lineNumber":1831},{"code":"int flags","lineNumber":1831},{"code":"struct nameidata *nd","lineNumber":1831}]}
{"lineNumber":1845,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1831}]}
{"lineNumber":1846,"condition":["read_seqcount_retry(&path.dentry->d_seq, nd->next_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1831}]}
{"lineNumber":1848,"condition":["unlikely(!inode)"],"assignments":[{"code":"inode = path.dentry->d_inode","lineNumber":1840}]}
{"lineNumber":1852,"condition":["nd->path.mnt != path.mnt"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1831}]}
{"lineNumber":1860,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1831}]}
{"lineNumber":1862,"condition":["read_seqcount_retry(&path.dentry->d_seq, nd->next_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1831}]}
{"lineNumber":1865,"condition":["path.mnt == nd->path.mnt"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1831}]}
{"lineNumber":1875,"condition":["path_equal(&nd->path, &nd->root)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871},{"code":"struct nameidata *nd","lineNumber":1871}]}
{"lineNumber":1877,"condition":["unlikely(nd->path.dentry == nd->path.mnt->mnt_root)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871},{"code":"struct nameidata *nd","lineNumber":1871}]}
{"lineNumber":1880,"condition":["!choose_mountpoint_rcu(real_mount(nd->path.mnt),\n\t\t\t\t\t   &nd->root, &path, &seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871},{"code":"struct nameidata *nd","lineNumber":1871}]}
{"lineNumber":1883,"condition":["unlikely(nd->flags & LOOKUP_NO_XDEV)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871}]}
{"lineNumber":1889,"condition":["read_seqretry(&mount_lock, nd->m_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871}]}
{"lineNumber":1897,"condition":["read_seqcount_retry(&old->d_seq, nd->seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871},{"code":"old = nd->path.dentry","lineNumber":1893}]}
{"lineNumber":1899,"condition":["unlikely(!path_connected(nd->path.mnt, parent))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871},{"code":"parent = old->d_parent","lineNumber":1894},{"code":"old = nd->path.dentry","lineNumber":1893}]}
{"lineNumber":1903,"condition":["read_seqretry(&mount_lock, nd->m_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871}]}
{"lineNumber":1905,"condition":["unlikely(nd->flags & LOOKUP_BENEATH)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1871}]}
{"lineNumber":1915,"condition":["path_equal(&nd->path, &nd->root)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1911},{"code":"struct nameidata *nd","lineNumber":1911}]}
{"lineNumber":1917,"condition":["unlikely(nd->path.dentry == nd->path.mnt->mnt_root)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1911},{"code":"struct nameidata *nd","lineNumber":1911}]}
{"lineNumber":1920,"condition":["!choose_mountpoint(real_mount(nd->path.mnt),\n\t\t\t\t       &nd->root, &path)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1911},{"code":"struct nameidata *nd","lineNumber":1911}]}
{"lineNumber":1926,"condition":["unlikely(nd->flags & LOOKUP_NO_XDEV)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1911}]}
{"lineNumber":1931,"condition":["unlikely(!path_connected(nd->path.mnt, parent))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1911},{"code":"parent = dget_parent(nd->path.dentry)","lineNumber":1930}]}
{"lineNumber":1938,"condition":["unlikely(nd->flags & LOOKUP_BENEATH)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1911}]}
{"lineNumber":1945,"condition":["type == LAST_DOTDOT"],"assignments":[{"code":"int type","lineNumber":1943}]}
{"lineNumber":1949,"condition":["!nd->root.mnt"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1943}]}
{"lineNumber":1951,"condition":["error"],"assignments":[]}
{"lineNumber":1954,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1943}]}
{"lineNumber":1958,"condition":["IS_ERR(parent)"],"assignments":[{"code":"parent = follow_dotdot(nd)","lineNumber":1957},{"code":"parent = follow_dotdot_rcu(nd)","lineNumber":1955},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943}]}
{"lineNumber":1961,"condition":["unlikely(error)"],"assignments":[{"code":"error = step_into(nd, WALK_NOFOLLOW, parent)","lineNumber":1960},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"parent = follow_dotdot(nd)","lineNumber":1957},{"code":"parent = follow_dotdot_rcu(nd)","lineNumber":1955}]}
{"lineNumber":1964,"condition":["unlikely(nd->flags & LOOKUP_IS_SCOPED)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1943}]}
{"lineNumber":1972,"condition":["__read_seqcount_retry(&mount_lock.seqcount, nd->m_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943}]}
{"lineNumber":1974,"condition":["__read_seqcount_retry(&rename_lock.seqcount, nd->r_seq)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943},{"code":"struct nameidata *nd","lineNumber":1943}]}
{"lineNumber":1989,"condition":["unlikely(nd->last_type != LAST_NORM)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":1981}]}
{"lineNumber":1990,"condition":["!(flags & WALK_MORE) && nd->depth"],"assignments":[{"code":"int flags","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981}]}
{"lineNumber":1995,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = lookup_fast(nd)","lineNumber":1994},{"code":"struct nameidata *nd","lineNumber":1981}]}
{"lineNumber":1997,"condition":["unlikely(!dentry)"],"assignments":[{"code":"dentry = lookup_fast(nd)","lineNumber":1994},{"code":"struct nameidata *nd","lineNumber":1981}]}
{"lineNumber":1999,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = lookup_slow(&nd->last, nd->path.dentry, nd->flags)","lineNumber":1998},{"code":"struct nameidata *nd","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981}]}
{"lineNumber":2002,"condition":["!(flags & WALK_MORE) && nd->depth"],"assignments":[{"code":"int flags","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981},{"code":"struct nameidata *nd","lineNumber":1981}]}
{"lineNumber":2250,"condition":["IS_ERR(name)"],"assignments":[{"code":"const char *name","lineNumber":2243}]}
{"lineNumber":2254,"condition":["!*name"],"assignments":[{"code":"const char *name","lineNumber":2243}]}
{"lineNumber":2268,"condition":["err"],"assignments":[]}
{"lineNumber":2274,"condition":["name[0] == '.'"],"assignments":[{"code":"const char *name","lineNumber":2243},{"code":"const char *name","lineNumber":2243},{"code":"name = nd->stack[--depth].name","lineNumber":2321},{"code":"name = link","lineNumber":2332},{"code":"name = this.name","lineNumber":2293},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"hash_len = hash_name(nd->path.dentry, name)","lineNumber":2271},{"code":"hash_len = this.hash_len","lineNumber":2292}]}
{"lineNumber":2276,"condition":["name[1] == '.'"],"assignments":[{"code":"const char *name","lineNumber":2243},{"code":"const char *name","lineNumber":2243},{"code":"name = nd->stack[--depth].name","lineNumber":2321},{"code":"name = link","lineNumber":2332},{"code":"name = this.name","lineNumber":2293},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"hash_len = hash_name(nd->path.dentry, name)","lineNumber":2271},{"code":"hash_len = this.hash_len","lineNumber":2292}]}
{"lineNumber":2284,"condition":["likely(type == LAST_NORM)"],"assignments":[{"code":"type = LAST_NORM","lineNumber":2273},{"code":"type = LAST_DOT","lineNumber":2282},{"code":"type = LAST_DOTDOT","lineNumber":2277}]}
{"lineNumber":2287,"condition":["unlikely(parent->d_flags & DCACHE_OP_HASH)"],"assignments":[{"code":"*parent = nd->path.dentry","lineNumber":2285},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243}]}
{"lineNumber":2290,"condition":["err < 0"],"assignments":[{"code":"err = parent->d_op->d_hash(parent, &this)","lineNumber":2289},{"code":"*parent = nd->path.dentry","lineNumber":2285},{"code":"*parent = nd->path.dentry","lineNumber":2285},{"code":"this = { { .hash_len = hash_len }, .name = name }","lineNumber":2288},{"code":".hash_len = hash_len","lineNumber":2288},{"code":".hash_len = hash_len","lineNumber":2288},{"code":".name = name","lineNumber":2288},{"code":".name = name","lineNumber":2288}]}
{"lineNumber":2302,"condition":["!*name"],"assignments":[{"code":"const char *name","lineNumber":2243},{"code":"name = this.name","lineNumber":2293},{"code":"name = nd->stack[--depth].name","lineNumber":2321},{"code":"name = link","lineNumber":2332},{"code":"name = nd->stack[--depth].name","lineNumber":2321},{"code":"name = link","lineNumber":2332},{"code":"hash_len = hash_name(nd->path.dentry, name)","lineNumber":2271},{"code":"hash_len = this.hash_len","lineNumber":2292},{"code":"name = nd->stack[--depth].name","lineNumber":2321},{"code":"name = link","lineNumber":2332},{"code":"this = { { .hash_len = hash_len }, .name = name }","lineNumber":2288}]}
{"lineNumber":2311,"condition":["unlikely(!*name)"],"assignments":[{"code":"const char *name","lineNumber":2243},{"code":"const char *name","lineNumber":2243},{"code":"name = nd->stack[--depth].name","lineNumber":2321},{"code":"name = link","lineNumber":2332},{"code":"const char *name","lineNumber":2243},{"code":"const char *name","lineNumber":2243},{"code":"name = nd->stack[--depth].name","lineNumber":2321},{"code":"name = link","lineNumber":2332},{"code":"name = this.name","lineNumber":2293},{"code":"hash_len = hash_name(nd->path.dentry, name)","lineNumber":2271},{"code":"hash_len = this.hash_len","lineNumber":2292}]}
{"lineNumber":2314,"condition":["!depth"],"assignments":[{"code":"depth = 0","lineNumber":2245}]}
{"lineNumber":2327,"condition":["unlikely(link)"],"assignments":[{"code":"link = walk_component(nd, WALK_MORE)","lineNumber":2325},{"code":"link = walk_component(nd, 0)","lineNumber":2322},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243}]}
{"lineNumber":2328,"condition":["IS_ERR(link)"],"assignments":[{"code":"link = walk_component(nd, WALK_MORE)","lineNumber":2325},{"code":"link = walk_component(nd, 0)","lineNumber":2322},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243}]}
{"lineNumber":2335,"condition":["unlikely(!d_can_lookup(nd->path.dentry))"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2243}]}
{"lineNumber":2336,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2243}]}
{"lineNumber":2337,"condition":["!try_to_unlazy(nd)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243},{"code":"struct nameidata *nd","lineNumber":2243}]}
{"lineNumber":2352,"condition":["(flags & (LOOKUP_RCU | LOOKUP_CACHED)) == LOOKUP_CACHED"],"assignments":[{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2355,"condition":["!*s"],"assignments":[{"code":"*s = nd->name->name","lineNumber":2349},{"code":"struct nameidata *nd","lineNumber":2346}]}
{"lineNumber":2357,"condition":["flags & LOOKUP_RCU"],"assignments":[{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2369,"condition":["nd->state & ND_ROOT_PRESET"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2346}]}
{"lineNumber":2372,"condition":["*s && unlikely(!d_can_lookup(root))"],"assignments":[{"code":"*s = nd->name->name","lineNumber":2349},{"code":"*root = nd->root.dentry","lineNumber":2370},{"code":"struct nameidata *nd","lineNumber":2346},{"code":"struct nameidata *nd","lineNumber":2346}]}
{"lineNumber":2376,"condition":["flags & LOOKUP_RCU"],"assignments":[{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2388,"condition":["*s == '/' && !(flags & LOOKUP_IN_ROOT)"],"assignments":[{"code":"*s = nd->name->name","lineNumber":2349},{"code":"struct nameidata *nd","lineNumber":2346},{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2390,"condition":["unlikely(error)"],"assignments":[{"code":"error = nd_jump_root(nd)","lineNumber":2389},{"code":"struct nameidata *nd","lineNumber":2346}]}
{"lineNumber":2396,"condition":["nd->dfd == AT_FDCWD"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2346}]}
{"lineNumber":2397,"condition":["flags & LOOKUP_RCU"],"assignments":[{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2416,"condition":["!f.file"],"assignments":[{"code":"f = fdget_raw(nd->dfd)","lineNumber":2413},{"code":"struct nameidata *nd","lineNumber":2346}]}
{"lineNumber":2421,"condition":["*s && unlikely(!d_can_lookup(dentry))"],"assignments":[{"code":"*s = nd->name->name","lineNumber":2349},{"code":"dentry = f.file->f_path.dentry","lineNumber":2419},{"code":"struct nameidata *nd","lineNumber":2346},{"code":"f = fdget_raw(nd->dfd)","lineNumber":2413}]}
{"lineNumber":2427,"condition":["flags & LOOKUP_RCU"],"assignments":[{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2438,"condition":["flags & LOOKUP_IS_SCOPED"],"assignments":[{"code":"unsigned flags","lineNumber":2346},{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2440,"condition":["flags & LOOKUP_RCU"],"assignments":[{"code":"unsigned flags","lineNumber":2346},{"code":"unsigned flags","lineNumber":2346},{"code":"unsigned flags","lineNumber":2346},{"code":"unsigned flags","lineNumber":2346},{"code":"unsigned flags","lineNumber":2346},{"code":"unsigned flags","lineNumber":2346}]}
{"lineNumber":2452,"condition":["nd->last_type == LAST_NORM && nd->last.name[nd->last.len]"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2450},{"code":"struct nameidata *nd","lineNumber":2450},{"code":"struct nameidata *nd","lineNumber":2450}]}
{"lineNumber":2460,"condition":["!(nd->flags & LOOKUP_RCU)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2458}]}
{"lineNumber":2472,"condition":["unlikely(flags & LOOKUP_DOWN) && !IS_ERR(s)"],"assignments":[{"code":"unsigned flags","lineNumber":2467},{"code":"*s = path_init(nd, flags)","lineNumber":2469},{"code":"struct nameidata *nd","lineNumber":2467}]}
{"lineNumber":2474,"condition":["unlikely(err < 0)"],"assignments":[{"code":"err = handle_lookup_down(nd)","lineNumber":2473},{"code":"struct nameidata *nd","lineNumber":2467}]}
{"lineNumber":2481,"condition":["!err && unlikely(nd->flags & LOOKUP_MOUNTPOINT)"],"assignments":[{"code":"err = link_path_walk(s, nd)","lineNumber":2478},{"code":"struct nameidata *nd","lineNumber":2467},{"code":"*s = path_init(nd, flags)","lineNumber":2469},{"code":"s = ERR_PTR(err)","lineNumber":2475},{"code":"unsigned flags","lineNumber":2467}]}
{"lineNumber":2485,"condition":["!err"],"assignments":[{"code":"err = handle_lookup_down(nd)","lineNumber":2482},{"code":"err = link_path_walk(s, nd)","lineNumber":2478},{"code":"*s = path_init(nd, flags)","lineNumber":2469},{"code":"s = ERR_PTR(err)","lineNumber":2475},{"code":"struct nameidata *nd","lineNumber":2467},{"code":"struct nameidata *nd","lineNumber":2467}]}
{"lineNumber":2488,"condition":["!err && nd->flags & LOOKUP_DIRECTORY"],"assignments":[{"code":"err = complete_walk(nd)","lineNumber":2486},{"code":"err = handle_lookup_down(nd)","lineNumber":2482},{"code":"struct nameidata *nd","lineNumber":2467},{"code":"err = link_path_walk(s, nd)","lineNumber":2478}]}
{"lineNumber":2489,"condition":["!d_can_lookup(nd->path.dentry)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":2467}]}
{"lineNumber":2491,"condition":["!err"],"assignments":[{"code":"err = -ENOTDIR","lineNumber":2490},{"code":"err = complete_walk(nd)","lineNumber":2486},{"code":"err = handle_lookup_down(nd)","lineNumber":2482},{"code":"err = link_path_walk(s, nd)","lineNumber":2478}]}
{"lineNumber":2505,"condition":["IS_ERR(name)"],"assignments":[{"code":"struct filename *name","lineNumber":2500}]}
{"lineNumber":2509,"condition":["unlikely(retval == -ECHILD)"],"assignments":[{"code":"retval = path_lookupat(&nd, flags | LOOKUP_RCU, path)","lineNumber":2508},{"code":"unsigned flags","lineNumber":2500},{"code":"struct path *path","lineNumber":2501}]}
{"lineNumber":2511,"condition":["unlikely(retval == -ESTALE)"],"assignments":[{"code":"retval = path_lookupat(&nd, flags, path)","lineNumber":2510},{"code":"retval = path_lookupat(&nd, flags | LOOKUP_RCU, path)","lineNumber":2508},{"code":"unsigned flags","lineNumber":2500},{"code":"struct path *path","lineNumber":2501},{"code":"unsigned flags","lineNumber":2500},{"code":"struct path *path","lineNumber":2501}]}
{"lineNumber":2514,"condition":["likely(!retval)"],"assignments":[{"code":"retval = path_lookupat(&nd, flags | LOOKUP_REVAL, path)","lineNumber":2512},{"code":"retval = path_lookupat(&nd, flags, path)","lineNumber":2510},{"code":"retval = path_lookupat(&nd, flags | LOOKUP_RCU, path)","lineNumber":2508},{"code":"unsigned flags","lineNumber":2500},{"code":"struct path *path","lineNumber":2501}]}
{"lineNumber":2527,"condition":["!err"],"assignments":[{"code":"err = link_path_walk(s, nd)","lineNumber":2526},{"code":"*s = path_init(nd, flags)","lineNumber":2525},{"code":"struct nameidata *nd","lineNumber":2522},{"code":"unsigned flags","lineNumber":2522}]}
{"lineNumber":2529,"condition":["!err"],"assignments":[{"code":"err = complete_walk(nd)","lineNumber":2528},{"code":"err = link_path_walk(s, nd)","lineNumber":2526},{"code":"*s = path_init(nd, flags)","lineNumber":2525},{"code":"struct nameidata *nd","lineNumber":2522},{"code":"struct nameidata *nd","lineNumber":2522}]}
{"lineNumber":2547,"condition":["IS_ERR(name)"],"assignments":[{"code":"struct filename *name","lineNumber":2539}]}
{"lineNumber":2551,"condition":["unlikely(retval == -ECHILD)"],"assignments":[{"code":"retval = path_parentat(&nd, flags | LOOKUP_RCU, parent)","lineNumber":2550},{"code":"unsigned int flags","lineNumber":2540},{"code":"struct path *parent","lineNumber":2540}]}
{"lineNumber":2553,"condition":["unlikely(retval == -ESTALE)"],"assignments":[{"code":"retval = path_parentat(&nd, flags, parent)","lineNumber":2552},{"code":"retval = path_parentat(&nd, flags | LOOKUP_RCU, parent)","lineNumber":2550},{"code":"unsigned int flags","lineNumber":2540},{"code":"struct path *parent","lineNumber":2540},{"code":"unsigned int flags","lineNumber":2540},{"code":"struct path *parent","lineNumber":2540}]}
{"lineNumber":2555,"condition":["likely(!retval)"],"assignments":[{"code":"retval = path_parentat(&nd, flags | LOOKUP_REVAL, parent)","lineNumber":2554},{"code":"retval = path_parentat(&nd, flags, parent)","lineNumber":2552},{"code":"retval = path_parentat(&nd, flags | LOOKUP_RCU, parent)","lineNumber":2550},{"code":"unsigned int flags","lineNumber":2540},{"code":"struct path *parent","lineNumber":2540}]}
{"lineNumber":2579,"condition":["error"],"assignments":[]}
{"lineNumber":2581,"condition":["unlikely(type != LAST_NORM)"],"assignments":[]}
{"lineNumber":2587,"condition":["IS_ERR(d)"],"assignments":[{"code":"d = lookup_one_qstr_excl(&last, path->dentry, 0)","lineNumber":2586},{"code":"struct path *path","lineNumber":2572}]}
{"lineNumber":2663,"condition":["!len"],"assignments":[{"code":"int len","lineNumber":2657},{"code":"struct dentry *base","lineNumber":2657},{"code":"const char *name","lineNumber":2657}]}
{"lineNumber":2666,"condition":["unlikely(name[0] == '.')"],"assignments":[{"code":"const char *name","lineNumber":2657},{"code":"struct dentry *base","lineNumber":2657},{"code":"int len","lineNumber":2657}]}
{"lineNumber":2667,"condition":["len < 2 || (len == 2 && name[1] == '.')"],"assignments":[{"code":"const char *name","lineNumber":2657},{"code":"struct dentry *base","lineNumber":2657},{"code":"int len","lineNumber":2657}]}
{"lineNumber":2673,"condition":["c == '/' || c == '\\0'"],"assignments":[{"code":"c = *(const unsigned char *)name++","lineNumber":2672},{"code":"const char *name","lineNumber":2657},{"code":"struct dentry *base","lineNumber":2657},{"code":"int len","lineNumber":2657}]}
{"lineNumber":2680,"condition":["base->d_flags & DCACHE_OP_HASH"],"assignments":[{"code":"struct dentry *base","lineNumber":2657},{"code":"const char *name","lineNumber":2657},{"code":"int len","lineNumber":2657}]}
{"lineNumber":2682,"condition":["err < 0"],"assignments":[{"code":"err = base->d_op->d_hash(base, this)","lineNumber":2681},{"code":"struct qstr *this","lineNumber":2658},{"code":"struct dentry *base","lineNumber":2657},{"code":"const char *name","lineNumber":2657},{"code":"int len","lineNumber":2657},{"code":"struct dentry *base","lineNumber":2657},{"code":"const char *name","lineNumber":2657},{"code":"int len","lineNumber":2657}]}
{"lineNumber":2711,"condition":["err"],"assignments":[]}
{"lineNumber":2738,"condition":["err"],"assignments":[]}
{"lineNumber":2768,"condition":["err"],"assignments":[]}
{"lineNumber":2798,"condition":["err"],"assignments":[]}
{"lineNumber":2802,"condition":["!ret"],"assignments":[{"code":"ret = lookup_dcache(&this, base, 0)","lineNumber":2801},{"code":"struct dentry *base","lineNumber":2790}]}
{"lineNumber":2834,"condition":["!IS_ERR(ret) && d_flags_negative(smp_load_acquire(&ret->d_flags))"],"assignments":[{"code":"*ret = lookup_one_unlocked(idmap, name, base, len)","lineNumber":2832},{"code":"struct mnt_idmap *idmap","lineNumber":2828},{"code":"const char *name","lineNumber":2829},{"code":"struct dentry *base","lineNumber":2830},{"code":"int len","lineNumber":2830}]}
{"lineNumber":2919,"condition":["vfsuid_eq_kuid(i_uid_into_vfsuid(idmap, inode), fsuid)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":2914},{"code":"struct inode *inode","lineNumber":2915},{"code":"fsuid = current_fsuid()","lineNumber":2917}]}
{"lineNumber":2921,"condition":["vfsuid_eq_kuid(i_uid_into_vfsuid(idmap, dir), fsuid)"],"assignments":[{"code":"struct inode *dir","lineNumber":2914},{"code":"struct mnt_idmap *idmap","lineNumber":2914},{"code":"struct inode *inode","lineNumber":2915},{"code":"fsuid = current_fsuid()","lineNumber":2917},{"code":"struct inode *inode","lineNumber":2915}]}
{"lineNumber":2953,"condition":["d_is_negative(victim)"],"assignments":[{"code":"struct dentry *victim","lineNumber":2948}]}
{"lineNumber":2960,"condition":["!vfsuid_valid(i_uid_into_vfsuid(idmap, inode)) ||\n\t    !vfsgid_valid(i_gid_into_vfsgid(idmap, inode))"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":2947},{"code":"*inode = d_backing_inode(victim)","lineNumber":2950},{"code":"struct dentry *victim","lineNumber":2948}]}
{"lineNumber":2967,"condition":["error"],"assignments":[]}
{"lineNumber":2969,"condition":["IS_APPEND(dir)"],"assignments":[{"code":"struct inode *dir","lineNumber":2947}]}
{"lineNumber":2972,"condition":["check_sticky(idmap, dir, inode) || IS_APPEND(inode) ||\n\t    IS_IMMUTABLE(inode) || IS_SWAPFILE(inode) ||\n\t    HAS_UNMAPPED_ID(idmap, inode)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":2947},{"code":"struct mnt_idmap *idmap","lineNumber":2947},{"code":"*inode = d_backing_inode(victim)","lineNumber":2950},{"code":"struct inode *dir","lineNumber":2947},{"code":"struct dentry *victim","lineNumber":2948}]}
{"lineNumber":2976,"condition":["isdir"],"assignments":[]}
{"lineNumber":2977,"condition":["!d_is_dir(victim)"],"assignments":[{"code":"struct dentry *victim","lineNumber":2948},{"code":"struct inode *dir","lineNumber":2947}]}
{"lineNumber":2979,"condition":["IS_ROOT(victim)"],"assignments":[{"code":"struct dentry *victim","lineNumber":2948},{"code":"struct inode *dir","lineNumber":2947}]}
{"lineNumber":2981,"condition":["d_is_dir(victim)"],"assignments":[{"code":"struct dentry *victim","lineNumber":2948},{"code":"struct inode *dir","lineNumber":2947}]}
{"lineNumber":2983,"condition":["IS_DEADDIR(dir)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":2947},{"code":"struct mnt_idmap *idmap","lineNumber":2947}]}
{"lineNumber":2985,"condition":["victim->d_flags & DCACHE_NFSFS_RENAMED"],"assignments":[{"code":"struct dentry *victim","lineNumber":2948},{"code":"struct inode *dir","lineNumber":2947}]}
{"lineNumber":3003,"condition":["child->d_inode"],"assignments":[{"code":"struct dentry *child","lineNumber":3000},{"code":"struct inode *dir","lineNumber":3000}]}
{"lineNumber":3005,"condition":["IS_DEADDIR(dir)"],"assignments":[{"code":"struct inode *dir","lineNumber":3000},{"code":"struct dentry *child","lineNumber":3000}]}
{"lineNumber":3007,"condition":["!fsuidgid_has_mapping(dir->i_sb, idmap)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":2999},{"code":"struct inode *dir","lineNumber":3000},{"code":"struct dentry *child","lineNumber":3000}]}
{"lineNumber":3018,"condition":["p"],"assignments":[]}
{"lineNumber":3025,"condition":["p"],"assignments":[]}
{"lineNumber":3041,"condition":["p1 == p2"],"assignments":[{"code":"struct dentry *p1","lineNumber":3039},{"code":"struct dentry *p2","lineNumber":3039}]}
{"lineNumber":3056,"condition":["READ_ONCE(c1->d_parent) == p2"],"assignments":[{"code":"struct dentry *c1","lineNumber":3054},{"code":"struct dentry *p2","lineNumber":3054}]}
{"lineNumber":3065,"condition":["likely(c1->d_parent == p2)"],"assignments":[{"code":"struct dentry *c1","lineNumber":3054},{"code":"struct dentry *p2","lineNumber":3054}]}
{"lineNumber":3079,"condition":["likely(c1->d_parent != p2)"],"assignments":[{"code":"struct dentry *c1","lineNumber":3054},{"code":"struct dentry *p2","lineNumber":3054}]}
{"lineNumber":3096,"condition":["p1 != p2"],"assignments":[{"code":"struct dentry *p1","lineNumber":3093},{"code":"struct dentry *p2","lineNumber":3093}]}
{"lineNumber":3117,"condition":["!IS_POSIXACL(dir)"],"assignments":[{"code":"const struct inode *dir","lineNumber":3115}]}
{"lineNumber":3184,"condition":["error"],"assignments":[]}
{"lineNumber":3187,"condition":["!dir->i_op->create"],"assignments":[{"code":"struct inode *dir","lineNumber":3178}]}
{"lineNumber":3192,"condition":["error"],"assignments":[]}
{"lineNumber":3195,"condition":["!error"],"assignments":[{"code":"error = dir->i_op->create(idmap, dir, dentry, mode, want_excl)","lineNumber":3194},{"code":"bool want_excl","lineNumber":3179},{"code":"struct mnt_idmap *idmap","lineNumber":3178},{"code":"struct dentry *dentry","lineNumber":3179},{"code":"mode = vfs_prepare_mode(idmap, dir, mode, S_IALLUGO, S_IFREG)","lineNumber":3190}]}
{"lineNumber":3207,"condition":["error"],"assignments":[]}
{"lineNumber":3213,"condition":["error"],"assignments":[]}
{"lineNumber":3216,"condition":["!error"],"assignments":[{"code":"error = f(dentry, mode, arg)","lineNumber":3215},{"code":"void *arg","lineNumber":3203},{"code":"struct dentry *dentry","lineNumber":3201}]}
{"lineNumber":3235,"condition":["!inode"],"assignments":[{"code":"*inode = dentry->d_inode","lineNumber":3232},{"code":"*dentry = path->dentry","lineNumber":3231},{"code":"const struct path *path","lineNumber":3228}]}
{"lineNumber":3242,"condition":["acc_mode & MAY_WRITE"],"assignments":[{"code":"int acc_mode","lineNumber":3229}]}
{"lineNumber":3244,"condition":["acc_mode & MAY_EXEC"],"assignments":[{"code":"int acc_mode","lineNumber":3229}]}
{"lineNumber":3249,"condition":["!may_open_dev(path)"],"assignments":[{"code":"const struct path *path","lineNumber":3228}]}
{"lineNumber":3254,"condition":["acc_mode & MAY_EXEC"],"assignments":[{"code":"int acc_mode","lineNumber":3229}]}
{"lineNumber":3259,"condition":["(acc_mode & MAY_EXEC) && path_noexec(path)"],"assignments":[{"code":"int acc_mode","lineNumber":3229},{"code":"const struct path *path","lineNumber":3228}]}
{"lineNumber":3265,"condition":["error"],"assignments":[]}
{"lineNumber":3271,"condition":["IS_APPEND(inode)"],"assignments":[{"code":"*inode = dentry->d_inode","lineNumber":3232},{"code":"*inode = dentry->d_inode","lineNumber":3232}]}
{"lineNumber":3272,"condition":["(flag & O_ACCMODE) != O_RDONLY && !(flag & O_APPEND)"],"assignments":[{"code":"int flag","lineNumber":3229}]}
{"lineNumber":3274,"condition":["flag & O_TRUNC"],"assignments":[{"code":"int flag","lineNumber":3229}]}
{"lineNumber":3279,"condition":["flag & O_NOATIME && !inode_owner_or_capable(idmap, inode)"],"assignments":[{"code":"int flag","lineNumber":3229},{"code":"struct mnt_idmap *idmap","lineNumber":3228},{"code":"*inode = dentry->d_inode","lineNumber":3232}]}
{"lineNumber":3290,"condition":["error"],"assignments":[]}
{"lineNumber":3294,"condition":["!error"],"assignments":[{"code":"error = security_file_truncate(filp)","lineNumber":3293},{"code":"struct file *filp","lineNumber":3285}]}
{"lineNumber":3305,"condition":["(flag & O_ACCMODE) == 3"],"assignments":[{"code":"int flag","lineNumber":3303}]}
{"lineNumber":3315,"condition":["error"],"assignments":[]}
{"lineNumber":3318,"condition":["!fsuidgid_has_mapping(dir->dentry->d_sb, idmap)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":3310},{"code":"const struct path *dir","lineNumber":3311},{"code":"struct dentry *dentry","lineNumber":3311},{"code":"umode_t mode","lineNumber":3312}]}
{"lineNumber":3323,"condition":["error"],"assignments":[]}
{"lineNumber":3350,"condition":["nd->flags & LOOKUP_DIRECTORY"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3342}]}
{"lineNumber":3358,"condition":["!error"],"assignments":[{"code":"error = dir->i_op->atomic_open(dir, dentry, file,\n\t\t\t\t       open_to_namei_flags(open_flag), mode)","lineNumber":3355},{"code":"struct dentry *dentry","lineNumber":3342},{"code":"struct file *file","lineNumber":3343},{"code":"int open_flag","lineNumber":3344},{"code":"umode_t mode","lineNumber":3344},{"code":"*dir =  nd->path.dentry->d_inode","lineNumber":3347},{"code":"*dir =  nd->path.dentry->d_inode","lineNumber":3347},{"code":"struct nameidata *nd","lineNumber":3342},{"code":"struct nameidata *nd","lineNumber":3342}]}
{"lineNumber":3359,"condition":["file->f_mode & FMODE_OPENED"],"assignments":[{"code":"struct file *file","lineNumber":3343},{"code":"umode_t mode","lineNumber":3344},{"code":"struct dentry *dentry","lineNumber":3342},{"code":"int open_flag","lineNumber":3344},{"code":"*dir =  nd->path.dentry->d_inode","lineNumber":3347},{"code":"struct nameidata *nd","lineNumber":3342}]}
{"lineNumber":3360,"condition":["unlikely(dentry != file->f_path.dentry)"],"assignments":[{"code":"struct file *file","lineNumber":3343},{"code":"struct dentry *dentry","lineNumber":3342},{"code":"umode_t mode","lineNumber":3344},{"code":"struct dentry *dentry","lineNumber":3342},{"code":"int open_flag","lineNumber":3344},{"code":"*dir =  nd->path.dentry->d_inode","lineNumber":3347},{"code":"struct nameidata *nd","lineNumber":3342}]}
{"lineNumber":3364,"condition":["WARN_ON(file->f_path.dentry == DENTRY_NOT_SET)"],"assignments":[{"code":"struct file *file","lineNumber":3343},{"code":"*const DENTRY_NOT_SET = (void *) -1UL","lineNumber":3346},{"code":"umode_t mode","lineNumber":3344},{"code":"struct dentry *dentry","lineNumber":3342},{"code":"int open_flag","lineNumber":3344},{"code":"*dir =  nd->path.dentry->d_inode","lineNumber":3347},{"code":"struct nameidata *nd","lineNumber":3342}]}
{"lineNumber":3367,"condition":["file->f_path.dentry"],"assignments":[{"code":"struct file *file","lineNumber":3343},{"code":"umode_t mode","lineNumber":3344},{"code":"struct dentry *dentry","lineNumber":3342},{"code":"int open_flag","lineNumber":3344},{"code":"*dir =  nd->path.dentry->d_inode","lineNumber":3347},{"code":"struct nameidata *nd","lineNumber":3342}]}
{"lineNumber":3371,"condition":["unlikely(d_is_negative(dentry))"],"assignments":[{"code":"dentry = file->f_path.dentry","lineNumber":3369},{"code":"struct dentry *dentry","lineNumber":3342},{"code":"umode_t mode","lineNumber":3344},{"code":"struct file *file","lineNumber":3343},{"code":"int open_flag","lineNumber":3344},{"code":"struct file *file","lineNumber":3343},{"code":"*dir =  nd->path.dentry->d_inode","lineNumber":3347}]}
{"lineNumber":3375,"condition":["error"],"assignments":[]}
{"lineNumber":3410,"condition":["unlikely(IS_DEADDIR(dir_inode))"],"assignments":[{"code":"*dir_inode = dir->d_inode","lineNumber":3403},{"code":"*dir = nd->path.dentry","lineNumber":3402},{"code":"struct nameidata *nd","lineNumber":3397}]}
{"lineNumber":3416,"condition":["!dentry"],"assignments":[{"code":"dentry = d_lookup(dir, &nd->last)","lineNumber":3414},{"code":"dentry = NULL","lineNumber":3431},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"*dir = nd->path.dentry","lineNumber":3402}]}
{"lineNumber":3418,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = d_alloc_parallel(dir, &nd->last, &wq)","lineNumber":3417},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"*dir = nd->path.dentry","lineNumber":3402}]}
{"lineNumber":3421,"condition":["d_in_lookup(dentry)"],"assignments":[{"code":"dentry = d_lookup(dir, &nd->last)","lineNumber":3414},{"code":"dentry = NULL","lineNumber":3431},{"code":"dentry = d_alloc_parallel(dir, &nd->last, &wq)","lineNumber":3417},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"*dir = nd->path.dentry","lineNumber":3402},{"code":"*dir = nd->path.dentry","lineNumber":3402}]}
{"lineNumber":3425,"condition":["likely(error > 0)"],"assignments":[{"code":"error = d_revalidate(dentry, nd->flags)","lineNumber":3424},{"code":"struct nameidata *nd","lineNumber":3397}]}
{"lineNumber":3427,"condition":["error"],"assignments":[]}
{"lineNumber":3433,"condition":["dentry->d_inode"],"assignments":[{"code":"dentry = d_lookup(dir, &nd->last)","lineNumber":3414},{"code":"dentry = NULL","lineNumber":3431},{"code":"dentry = d_alloc_parallel(dir, &nd->last, &wq)","lineNumber":3417},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"struct nameidata *nd","lineNumber":3397}]}
{"lineNumber":3447,"condition":["unlikely(!got_write)"],"assignments":[{"code":"bool got_write","lineNumber":3399}]}
{"lineNumber":3450,"condition":["open_flag & O_CREAT"],"assignments":[{"code":"open_flag = op->open_flag","lineNumber":3404},{"code":"const struct open_flags *op","lineNumber":3398}]}
{"lineNumber":3451,"condition":["open_flag & O_EXCL"],"assignments":[{"code":"open_flag = op->open_flag","lineNumber":3404},{"code":"const struct open_flags *op","lineNumber":3398}]}
{"lineNumber":3454,"condition":["likely(got_write)"],"assignments":[{"code":"bool got_write","lineNumber":3399}]}
{"lineNumber":3460,"condition":["create_error"],"assignments":[]}
{"lineNumber":3462,"condition":["dir_inode->i_op->atomic_open"],"assignments":[{"code":"*dir_inode = dir->d_inode","lineNumber":3403},{"code":"*dir = nd->path.dentry","lineNumber":3402}]}
{"lineNumber":3464,"condition":["unlikely(create_error) && dentry == ERR_PTR(-ENOENT)"],"assignments":[{"code":"create_error = 0","lineNumber":3406},{"code":"create_error = -EROFS","lineNumber":3458},{"code":"create_error = may_o_create(idmap, &nd->path,\n\t\t\t\t\t\t    dentry, mode)","lineNumber":3455},{"code":"dentry = atomic_open(nd, dentry, file, open_flag, mode)","lineNumber":3463},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"struct file *file","lineNumber":3397},{"code":"mode = vfs_prepare_mode(idmap, dir->d_inode, mode, mode, mode)","lineNumber":3453},{"code":"mode = op->mode","lineNumber":3407},{"code":"mode = vfs_prepare_mode(idmap, dir->d_inode, mode, mode, mode)","lineNumber":3453},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":3449},{"code":"open_flag = op->open_flag","lineNumber":3404},{"code":"const struct open_flags *op","lineNumber":3398}]}
{"lineNumber":3469,"condition":["d_in_lookup(dentry)"],"assignments":[{"code":"dentry = d_lookup(dir, &nd->last)","lineNumber":3414},{"code":"dentry = NULL","lineNumber":3431},{"code":"dentry = d_alloc_parallel(dir, &nd->last, &wq)","lineNumber":3417},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"struct nameidata *nd","lineNumber":3397}]}
{"lineNumber":3473,"condition":["unlikely(res)"],"assignments":[{"code":"*res = dir_inode->i_op->lookup(dir_inode, dentry,\n\t\t\t\t\t\t\t     nd->flags)","lineNumber":3470},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"*dir_inode = dir->d_inode","lineNumber":3403},{"code":"*dir_inode = dir->d_inode","lineNumber":3403}]}
{"lineNumber":3474,"condition":["IS_ERR(res)"],"assignments":[{"code":"*res = dir_inode->i_op->lookup(dir_inode, dentry,\n\t\t\t\t\t\t\t     nd->flags)","lineNumber":3470},{"code":"struct nameidata *nd","lineNumber":3397}]}
{"lineNumber":3484,"condition":["!dentry->d_inode && (open_flag & O_CREAT)"],"assignments":[{"code":"dentry = res","lineNumber":3479},{"code":"open_flag = op->open_flag","lineNumber":3404},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"const struct open_flags *op","lineNumber":3398},{"code":"dentry = d_lookup(dir, &nd->last)","lineNumber":3414},{"code":"dentry = NULL","lineNumber":3431},{"code":"dentry = d_alloc_parallel(dir, &nd->last, &wq)","lineNumber":3417}]}
{"lineNumber":3487,"condition":["!dir_inode->i_op->create"],"assignments":[{"code":"*dir_inode = dir->d_inode","lineNumber":3403},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"dentry = res","lineNumber":3479}]}
{"lineNumber":3494,"condition":["error"],"assignments":[]}
{"lineNumber":3497,"condition":["unlikely(create_error) && !dentry->d_inode"],"assignments":[{"code":"create_error = 0","lineNumber":3406},{"code":"create_error = -EROFS","lineNumber":3458},{"code":"create_error = may_o_create(idmap, &nd->path,\n\t\t\t\t\t\t    dentry, mode)","lineNumber":3455},{"code":"dentry = res","lineNumber":3479},{"code":"struct nameidata *nd","lineNumber":3397},{"code":"mode = vfs_prepare_mode(idmap, dir->d_inode, mode, mode, mode)","lineNumber":3453},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":3449},{"code":"mode = op->mode","lineNumber":3407},{"code":"mode = vfs_prepare_mode(idmap, dir->d_inode, mode, mode, mode)","lineNumber":3453},{"code":"dentry = d_lookup(dir, &nd->last)","lineNumber":3414},{"code":"dentry = NULL","lineNumber":3431},{"code":"dentry = d_alloc_parallel(dir, &nd->last, &wq)","lineNumber":3417},{"code":"open_flag = op->open_flag","lineNumber":3404},{"code":"const struct open_flags *op","lineNumber":3398}]}
{"lineNumber":3519,"condition":["nd->last_type != LAST_NORM"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3520,"condition":["nd->depth"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3525,"condition":["!(open_flag & O_CREAT)"],"assignments":[{"code":"open_flag = op->open_flag","lineNumber":3512},{"code":"const struct open_flags *op","lineNumber":3509}]}
{"lineNumber":3526,"condition":["nd->last.name[nd->last.len]"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3530,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = lookup_fast(nd)","lineNumber":3529},{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3532,"condition":["likely(dentry)"],"assignments":[{"code":"dentry = lookup_fast(nd)","lineNumber":3529},{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3538,"condition":["nd->flags & LOOKUP_RCU"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3539,"condition":["!try_to_unlazy(nd)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3544,"condition":["unlikely(nd->last.name[nd->last.len])"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3548,"condition":["open_flag & (O_CREAT | O_TRUNC | O_WRONLY | O_RDWR)"],"assignments":[{"code":"open_flag = op->open_flag","lineNumber":3512},{"code":"const struct open_flags *op","lineNumber":3509}]}
{"lineNumber":3556,"condition":["open_flag & O_CREAT"],"assignments":[{"code":"open_flag = op->open_flag","lineNumber":3512},{"code":"const struct open_flags *op","lineNumber":3509}]}
{"lineNumber":3561,"condition":["!IS_ERR(dentry) && (file->f_mode & FMODE_CREATED)"],"assignments":[{"code":"dentry = lookup_open(nd, file, op, got_write)","lineNumber":3560},{"code":"struct file *file","lineNumber":3509},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"const struct open_flags *op","lineNumber":3509},{"code":"got_write = false","lineNumber":3513},{"code":"got_write = !mnt_want_write(nd->path.mnt)","lineNumber":3549}]}
{"lineNumber":3563,"condition":["open_flag & O_CREAT"],"assignments":[{"code":"open_flag = op->open_flag","lineNumber":3512}]}
{"lineNumber":3568,"condition":["got_write"],"assignments":[]}
{"lineNumber":3571,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = lookup_open(nd, file, op, got_write)","lineNumber":3560},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct file *file","lineNumber":3509},{"code":"const struct open_flags *op","lineNumber":3509},{"code":"*dir = nd->path.dentry","lineNumber":3511},{"code":"got_write = false","lineNumber":3513},{"code":"got_write = !mnt_want_write(nd->path.mnt)","lineNumber":3549}]}
{"lineNumber":3574,"condition":["file->f_mode & (FMODE_OPENED | FMODE_CREATED)"],"assignments":[{"code":"struct file *file","lineNumber":3509}]}
{"lineNumber":3581,"condition":["nd->depth"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3584,"condition":["unlikely(res)"],"assignments":[{"code":"res = step_into(nd, WALK_TRAILING, dentry)","lineNumber":3583},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508},{"code":"struct nameidata *nd","lineNumber":3508}]}
{"lineNumber":3601,"condition":["!(file->f_mode & (FMODE_OPENED | FMODE_CREATED))"],"assignments":[{"code":"struct file *file","lineNumber":3593}]}
{"lineNumber":3603,"condition":["error"],"assignments":[]}
{"lineNumber":3606,"condition":["!(file->f_mode & FMODE_CREATED)"],"assignments":[{"code":"struct file *file","lineNumber":3593}]}
{"lineNumber":3609,"condition":["open_flag & O_CREAT"],"assignments":[{"code":"open_flag = op->open_flag","lineNumber":3596},{"code":"const struct open_flags *op","lineNumber":3593}]}
{"lineNumber":3610,"condition":["(open_flag & O_EXCL) && !(file->f_mode & FMODE_CREATED)"],"assignments":[{"code":"struct file *file","lineNumber":3593},{"code":"open_flag = op->open_flag","lineNumber":3596},{"code":"const struct open_flags *op","lineNumber":3593}]}
{"lineNumber":3612,"condition":["d_is_dir(nd->path.dentry)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3592}]}
{"lineNumber":3616,"condition":["unlikely(error)"],"assignments":[{"code":"error = may_create_in_sticky(idmap, nd,\n\t\t\t\t\t     d_backing_inode(nd->path.dentry))","lineNumber":3614},{"code":"struct nameidata *nd","lineNumber":3592},{"code":"struct nameidata *nd","lineNumber":3592},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":3608}]}
{"lineNumber":3619,"condition":["(nd->flags & LOOKUP_DIRECTORY) && !d_can_lookup(nd->path.dentry)"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3592},{"code":"struct nameidata *nd","lineNumber":3592}]}
{"lineNumber":3624,"condition":["file->f_mode & FMODE_CREATED"],"assignments":[{"code":"struct file *file","lineNumber":3593}]}
{"lineNumber":3628,"condition":["d_is_reg(nd->path.dentry) && open_flag & O_TRUNC"],"assignments":[{"code":"struct nameidata *nd","lineNumber":3592},{"code":"open_flag = op->open_flag","lineNumber":3596},{"code":"const struct open_flags *op","lineNumber":3593}]}
{"lineNumber":3630,"condition":["error"],"assignments":[]}
{"lineNumber":3635,"condition":["!error && !(file->f_mode & FMODE_OPENED)"],"assignments":[{"code":"struct file *file","lineNumber":3593},{"code":"error = may_open(idmap, &nd->path, acc_mode, open_flag)","lineNumber":3634},{"code":"struct nameidata *nd","lineNumber":3592},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":3608},{"code":"acc_mode = op->acc_mode","lineNumber":3623},{"code":"acc_mode = 0","lineNumber":3627},{"code":"const struct open_flags *op","lineNumber":3593},{"code":"open_flag = op->open_flag","lineNumber":3596}]}
{"lineNumber":3637,"condition":["!error"],"assignments":[{"code":"error = vfs_open(&nd->path, file)","lineNumber":3636},{"code":"error = may_open(idmap, &nd->path, acc_mode, open_flag)","lineNumber":3634},{"code":"struct nameidata *nd","lineNumber":3592},{"code":"struct file *file","lineNumber":3593},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":3608},{"code":"acc_mode = op->acc_mode","lineNumber":3623},{"code":"acc_mode = 0","lineNumber":3627}]}
{"lineNumber":3639,"condition":["!error && do_truncate"],"assignments":[{"code":"error = ima_file_check(file, op->acc_mode)","lineNumber":3638},{"code":"do_truncate = false","lineNumber":3622},{"code":"do_truncate = true","lineNumber":3632},{"code":"error = vfs_open(&nd->path, file)","lineNumber":3636},{"code":"struct file *file","lineNumber":3593},{"code":"const struct open_flags *op","lineNumber":3593},{"code":"error = may_open(idmap, &nd->path, acc_mode, open_flag)","lineNumber":3634},{"code":"struct nameidata *nd","lineNumber":3592}]}
{"lineNumber":3641,"condition":["unlikely(error > 0)"],"assignments":[{"code":"error = handle_truncate(idmap, file)","lineNumber":3640},{"code":"error = ima_file_check(file, op->acc_mode)","lineNumber":3638},{"code":"struct file *file","lineNumber":3593},{"code":"error = vfs_open(&nd->path, file)","lineNumber":3636},{"code":"const struct open_flags *op","lineNumber":3593},{"code":"error = may_open(idmap, &nd->path, acc_mode, open_flag)","lineNumber":3634},{"code":"struct nameidata *nd","lineNumber":3592},{"code":"idmap = mnt_idmap(nd->path.mnt)","lineNumber":3608},{"code":"struct nameidata *nd","lineNumber":3592}]}
{"lineNumber":3645,"condition":["do_truncate"],"assignments":[]}
{"lineNumber":3677,"condition":["error"],"assignments":[]}
{"lineNumber":3679,"condition":["!dir->i_op->tmpfile"],"assignments":[{"code":"*dir = d_inode(parentpath->dentry)","lineNumber":3670},{"code":"const struct path *parentpath","lineNumber":3666}]}
{"lineNumber":3682,"condition":["unlikely(!child)"],"assignments":[{"code":"child = d_alloc(parentpath->dentry, &slash_name)","lineNumber":3681},{"code":"const struct path *parentpath","lineNumber":3666}]}
{"lineNumber":3689,"condition":["error"],"assignments":[]}
{"lineNumber":3693,"condition":["error"],"assignments":[]}
{"lineNumber":3696,"condition":["!(open_flag & O_EXCL)"],"assignments":[{"code":"open_flag = file->f_flags","lineNumber":3673},{"code":"struct file *file","lineNumber":3667}]}
{"lineNumber":3726,"condition":["IS_ERR(file)"],"assignments":[{"code":"file = alloc_empty_file_noaccount(open_flag, cred)","lineNumber":3725},{"code":"int open_flag","lineNumber":3719},{"code":"const struct cred *cred","lineNumber":3720}]}
{"lineNumber":3730,"condition":["error"],"assignments":[]}
{"lineNumber":3745,"condition":["unlikely(error)"],"assignments":[{"code":"error = path_lookupat(nd, flags | LOOKUP_DIRECTORY, &path)","lineNumber":3743},{"code":"struct nameidata *nd","lineNumber":3738},{"code":"unsigned flags","lineNumber":3738}]}
{"lineNumber":3748,"condition":["unlikely(error)"],"assignments":[{"code":"error = mnt_want_write(path.mnt)","lineNumber":3747}]}
{"lineNumber":3751,"condition":["error"],"assignments":[]}
{"lineNumber":3765,"condition":["!error"],"assignments":[{"code":"error = path_lookupat(nd, flags, &path)","lineNumber":3764},{"code":"struct nameidata *nd","lineNumber":3761},{"code":"unsigned flags","lineNumber":3761}]}
{"lineNumber":3780,"condition":["IS_ERR(file)"],"assignments":[{"code":"file = alloc_empty_file(op->open_flag, current_cred())","lineNumber":3779},{"code":"const struct open_flags *op","lineNumber":3774}]}
{"lineNumber":3783,"condition":["unlikely(file->f_flags & __O_TMPFILE)"],"assignments":[{"code":"file = alloc_empty_file(op->open_flag, current_cred())","lineNumber":3779},{"code":"const struct open_flags *op","lineNumber":3774}]}
{"lineNumber":3785,"condition":["unlikely(file->f_flags & O_PATH)"],"assignments":[{"code":"file = alloc_empty_file(op->open_flag, current_cred())","lineNumber":3779},{"code":"const struct open_flags *op","lineNumber":3774}]}
{"lineNumber":3792,"condition":["!error"],"assignments":[{"code":"error = link_path_walk(s, nd)","lineNumber":3789},{"code":"*s = path_init(nd, flags)","lineNumber":3788},{"code":"struct nameidata *nd","lineNumber":3773},{"code":"unsigned flags","lineNumber":3774}]}
{"lineNumber":3796,"condition":["likely(!error)"],"assignments":[{"code":"error = do_open(nd, file, op)","lineNumber":3793},{"code":"error = do_o_path(nd, flags, file)","lineNumber":3786},{"code":"error = do_tmpfile(nd, flags, op, file)","lineNumber":3784},{"code":"error = link_path_walk(s, nd)","lineNumber":3789},{"code":"const struct open_flags *op","lineNumber":3774},{"code":"struct nameidata *nd","lineNumber":3773},{"code":"unsigned flags","lineNumber":3774},{"code":"struct nameidata *nd","lineNumber":3773},{"code":"unsigned flags","lineNumber":3774},{"code":"const struct open_flags *op","lineNumber":3774},{"code":"*s = path_init(nd, flags)","lineNumber":3788},{"code":"file = alloc_empty_file(op->open_flag, current_cred())","lineNumber":3779},{"code":"file = alloc_empty_file(op->open_flag, current_cred())","lineNumber":3779},{"code":"file = alloc_empty_file(op->open_flag, current_cred())","lineNumber":3779}]}
{"lineNumber":3797,"condition":["likely(file->f_mode & FMODE_OPENED)"],"assignments":[{"code":"file = alloc_empty_file(op->open_flag, current_cred())","lineNumber":3779},{"code":"const struct open_flags *op","lineNumber":3774}]}
{"lineNumber":3803,"condition":["error == -EOPENSTALE"],"assignments":[{"code":"error = -EINVAL","lineNumber":3800},{"code":"error = do_open(nd, file, op)","lineNumber":3793},{"code":"error = do_o_path(nd, flags, file)","lineNumber":3786},{"code":"error = do_tmpfile(nd, flags, op, file)","lineNumber":3784},{"code":"error = link_path_walk(s, nd)","lineNumber":3789},{"code":"const struct open_flags *op","lineNumber":3774},{"code":"struct nameidata *nd","lineNumber":3773},{"code":"unsigned flags","lineNumber":3774},{"code":"struct nameidata *nd","lineNumber":3773},{"code":"unsigned flags","lineNumber":3774},{"code":"const struct open_flags *op","lineNumber":3774}]}
{"lineNumber":3804,"condition":["flags & LOOKUP_RCU"],"assignments":[{"code":"unsigned flags","lineNumber":3774},{"code":"unsigned flags","lineNumber":3774},{"code":"unsigned flags","lineNumber":3774}]}
{"lineNumber":3821,"condition":["unlikely(filp == ERR_PTR(-ECHILD))"],"assignments":[{"code":"filp = path_openat(&nd, op, flags | LOOKUP_RCU)","lineNumber":3820},{"code":"const struct open_flags *op","lineNumber":3813},{"code":"flags = op->lookup_flags","lineNumber":3816}]}
{"lineNumber":3823,"condition":["unlikely(filp == ERR_PTR(-ESTALE))"],"assignments":[{"code":"filp = path_openat(&nd, op, flags)","lineNumber":3822},{"code":"filp = path_openat(&nd, op, flags | LOOKUP_RCU)","lineNumber":3820},{"code":"const struct open_flags *op","lineNumber":3813},{"code":"flags = op->lookup_flags","lineNumber":3816},{"code":"flags = op->lookup_flags","lineNumber":3816}]}
{"lineNumber":3837,"condition":["d_is_symlink(root->dentry) && op->intent & LOOKUP_OPEN"],"assignments":[{"code":"const struct path *root","lineNumber":3829},{"code":"const struct open_flags *op","lineNumber":3830}]}
{"lineNumber":3841,"condition":["IS_ERR(filename)"],"assignments":[{"code":"filename = getname_kernel(name)","lineNumber":3840},{"code":"const char *name","lineNumber":3830}]}
{"lineNumber":3846,"condition":["unlikely(file == ERR_PTR(-ECHILD))"],"assignments":[{"code":"file = path_openat(&nd, op, flags | LOOKUP_RCU)","lineNumber":3845},{"code":"const struct open_flags *op","lineNumber":3830},{"code":"flags = op->lookup_flags","lineNumber":3835}]}
{"lineNumber":3848,"condition":["unlikely(file == ERR_PTR(-ESTALE))"],"assignments":[{"code":"file = path_openat(&nd, op, flags)","lineNumber":3847},{"code":"file = path_openat(&nd, op, flags | LOOKUP_RCU)","lineNumber":3845},{"code":"const struct open_flags *op","lineNumber":3830},{"code":"flags = op->lookup_flags","lineNumber":3835},{"code":"flags = op->lookup_flags","lineNumber":3835}]}
{"lineNumber":3868,"condition":["error"],"assignments":[]}
{"lineNumber":3875,"condition":["unlikely(type != LAST_NORM)"],"assignments":[]}
{"lineNumber":3884,"condition":["last.name[last.len] && !want_dir"],"assignments":[{"code":"want_dir = lookup_flags & LOOKUP_DIRECTORY","lineNumber":3860},{"code":"unsigned int lookup_flags","lineNumber":3856}]}
{"lineNumber":3889,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path->dentry,\n\t\t\t\t      reval_flag | create_flags)","lineNumber":3887},{"code":"struct path *path","lineNumber":3856},{"code":"create_flags = LOOKUP_CREATE | LOOKUP_EXCL","lineNumber":3862},{"code":"create_flags = 0","lineNumber":3885},{"code":"reval_flag = lookup_flags & LOOKUP_REVAL","lineNumber":3861}]}
{"lineNumber":3893,"condition":["d_is_positive(dentry)"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path->dentry,\n\t\t\t\t      reval_flag | create_flags)","lineNumber":3887},{"code":"struct path *path","lineNumber":3856},{"code":"create_flags = LOOKUP_CREATE | LOOKUP_EXCL","lineNumber":3862},{"code":"create_flags = 0","lineNumber":3885}]}
{"lineNumber":3902,"condition":["unlikely(!create_flags)"],"assignments":[{"code":"create_flags = LOOKUP_CREATE | LOOKUP_EXCL","lineNumber":3862},{"code":"create_flags = 0","lineNumber":3885},{"code":"reval_flag = lookup_flags & LOOKUP_REVAL","lineNumber":3861}]}
{"lineNumber":3906,"condition":["unlikely(err2)"],"assignments":[{"code":"err2 = mnt_want_write(path->mnt)","lineNumber":3879},{"code":"struct path *path","lineNumber":3856}]}
{"lineNumber":3916,"condition":["!err2"],"assignments":[{"code":"err2 = mnt_want_write(path->mnt)","lineNumber":3879},{"code":"struct path *path","lineNumber":3856}]}
{"lineNumber":3976,"condition":["error"],"assignments":[]}
{"lineNumber":3979,"condition":["(S_ISCHR(mode) || S_ISBLK(mode)) && !is_whiteout &&\n\t    !capable(CAP_MKNOD)"],"assignments":[{"code":"umode_t mode","lineNumber":3971},{"code":"is_whiteout = S_ISCHR(mode) && dev == WHITEOUT_DEV","lineNumber":3973},{"code":"dev_t dev","lineNumber":3971}]}
{"lineNumber":3983,"condition":["!dir->i_op->mknod"],"assignments":[{"code":"struct inode *dir","lineNumber":3970}]}
{"lineNumber":3988,"condition":["error"],"assignments":[]}
{"lineNumber":3992,"condition":["error"],"assignments":[]}
{"lineNumber":3996,"condition":["!error"],"assignments":[{"code":"error = dir->i_op->mknod(idmap, dir, dentry, mode, dev)","lineNumber":3995},{"code":"struct mnt_idmap *idmap","lineNumber":3970},{"code":"struct dentry *dentry","lineNumber":3971},{"code":"dev_t dev","lineNumber":3971}]}
{"lineNumber":4029,"condition":["error"],"assignments":[]}
{"lineNumber":4034,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = filename_create(dfd, name, &path, lookup_flags)","lineNumber":4032},{"code":"int dfd","lineNumber":4019},{"code":"struct filename *name","lineNumber":4019},{"code":"lookup_flags = 0","lineNumber":4026}]}
{"lineNumber":4039,"condition":["error"],"assignments":[]}
{"lineNumber":4047,"condition":["!error"],"assignments":[{"code":"error = vfs_create(idmap, path.dentry->d_inode,\n\t\t\t\t\t   dentry, mode, true)","lineNumber":4045},{"code":"idmap = mnt_idmap(path.mnt)","lineNumber":4042},{"code":"unsigned int dev","lineNumber":4020}]}
{"lineNumber":4061,"condition":["retry_estale(error, lookup_flags)"],"assignments":[{"code":"error = security_path_mknod(&path, dentry,\n\t\t\tmode_strip_umask(path.dentry->d_inode, mode), dev)","lineNumber":4037},{"code":"error = vfs_mknod(idmap, path.dentry->d_inode,\n\t\t\t\t\t  dentry, mode, 0)","lineNumber":4055},{"code":"error = vfs_mknod(idmap, path.dentry->d_inode,\n\t\t\t\t\t  dentry, mode, new_decode_dev(dev))","lineNumber":4051},{"code":"unsigned int dev","lineNumber":4020},{"code":"error = vfs_create(idmap, path.dentry->d_inode,\n\t\t\t\t\t   dentry, mode, true)","lineNumber":4045},{"code":"lookup_flags = 0","lineNumber":4026},{"code":"umode_t mode","lineNumber":4019},{"code":"idmap = mnt_idmap(path.mnt)","lineNumber":4042},{"code":"idmap = mnt_idmap(path.mnt)","lineNumber":4042}]}
{"lineNumber":4103,"condition":["error"],"assignments":[]}
{"lineNumber":4106,"condition":["!dir->i_op->mkdir"],"assignments":[{"code":"struct inode *dir","lineNumber":4096}]}
{"lineNumber":4111,"condition":["error"],"assignments":[]}
{"lineNumber":4114,"condition":["max_links && dir->i_nlink >= max_links"],"assignments":[{"code":"max_links = dir->i_sb->s_max_links","lineNumber":4100},{"code":"max_links = dir->i_sb->s_max_links","lineNumber":4100},{"code":"struct inode *dir","lineNumber":4096},{"code":"struct inode *dir","lineNumber":4096},{"code":"struct dentry *dentry","lineNumber":4097},{"code":"mode = vfs_prepare_mode(idmap, dir, mode, S_IRWXUGO | S_ISVTX, 0)","lineNumber":4109},{"code":"umode_t mode","lineNumber":4097}]}
{"lineNumber":4118,"condition":["!error"],"assignments":[{"code":"error = dir->i_op->mkdir(idmap, dir, dentry, mode)","lineNumber":4117},{"code":"struct mnt_idmap *idmap","lineNumber":4096},{"code":"struct dentry *dentry","lineNumber":4097},{"code":"mode = vfs_prepare_mode(idmap, dir, mode, S_IRWXUGO | S_ISVTX, 0)","lineNumber":4109}]}
{"lineNumber":4134,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = filename_create(dfd, name, &path, lookup_flags)","lineNumber":4132},{"code":"int dfd","lineNumber":4124},{"code":"struct filename *name","lineNumber":4124},{"code":"lookup_flags = LOOKUP_DIRECTORY","lineNumber":4129}]}
{"lineNumber":4139,"condition":["!error"],"assignments":[{"code":"error = security_path_mkdir(&path, dentry,\n\t\t\tmode_strip_umask(path.dentry->d_inode, mode))","lineNumber":4137},{"code":"umode_t mode","lineNumber":4124}]}
{"lineNumber":4144,"condition":["retry_estale(error, lookup_flags)"],"assignments":[{"code":"error = vfs_mkdir(mnt_idmap(path.mnt), path.dentry->d_inode,\n\t\t\t\t  dentry, mode)","lineNumber":4140},{"code":"error = security_path_mkdir(&path, dentry,\n\t\t\tmode_strip_umask(path.dentry->d_inode, mode))","lineNumber":4137},{"code":"lookup_flags = LOOKUP_DIRECTORY","lineNumber":4129},{"code":"umode_t mode","lineNumber":4124},{"code":"umode_t mode","lineNumber":4124}]}
{"lineNumber":4182,"condition":["error"],"assignments":[]}
{"lineNumber":4185,"condition":["!dir->i_op->rmdir"],"assignments":[{"code":"struct inode *dir","lineNumber":4177}]}
{"lineNumber":4192,"condition":["is_local_mountpoint(dentry) ||\n\t    (dentry->d_inode->i_flags & S_KERNEL_FILE)"],"assignments":[{"code":"struct dentry *dentry","lineNumber":4178}]}
{"lineNumber":4197,"condition":["error"],"assignments":[]}
{"lineNumber":4201,"condition":["error"],"assignments":[]}
{"lineNumber":4212,"condition":["!error"],"assignments":[{"code":"error = -EBUSY","lineNumber":4191},{"code":"error = security_inode_rmdir(dir, dentry)","lineNumber":4196},{"code":"error = dir->i_op->rmdir(dir, dentry)","lineNumber":4200},{"code":"struct inode *dir","lineNumber":4177}]}
{"lineNumber":4228,"condition":["error"],"assignments":[]}
{"lineNumber":4244,"condition":["error"],"assignments":[]}
{"lineNumber":4250,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4248}]}
{"lineNumber":4252,"condition":["!dentry->d_inode"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4248}]}
{"lineNumber":4257,"condition":["error"],"assignments":[]}
{"lineNumber":4267,"condition":["retry_estale(error, lookup_flags)"],"assignments":[{"code":"error = mnt_want_write(path.mnt)","lineNumber":4243},{"code":"error = PTR_ERR(dentry)","lineNumber":4249},{"code":"error = security_path_rmdir(&path, dentry)","lineNumber":4256},{"code":"error = vfs_rmdir(mnt_idmap(path.mnt), path.dentry->d_inode, dentry)","lineNumber":4259},{"code":"error = -ENOENT","lineNumber":4253},{"code":"error = -EBUSY","lineNumber":4239},{"code":"error = -EINVAL","lineNumber":4236},{"code":"error = -ENOTEMPTY","lineNumber":4233},{"code":"lookup_flags = 0","lineNumber":4225},{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4248}]}
{"lineNumber":4312,"condition":["error"],"assignments":[]}
{"lineNumber":4315,"condition":["!dir->i_op->unlink"],"assignments":[{"code":"struct inode *dir","lineNumber":4306}]}
{"lineNumber":4319,"condition":["IS_SWAPFILE(target)"],"assignments":[{"code":"*target = dentry->d_inode","lineNumber":4309},{"code":"struct dentry *dentry","lineNumber":4307}]}
{"lineNumber":4321,"condition":["is_local_mountpoint(dentry)"],"assignments":[{"code":"struct dentry *dentry","lineNumber":4307}]}
{"lineNumber":4325,"condition":["!error"],"assignments":[{"code":"error = security_inode_unlink(dir, dentry)","lineNumber":4324},{"code":"struct dentry *dentry","lineNumber":4307},{"code":"struct inode *dir","lineNumber":4306}]}
{"lineNumber":4327,"condition":["error"],"assignments":[]}
{"lineNumber":4330,"condition":["!error"],"assignments":[{"code":"error = dir->i_op->unlink(dir, dentry)","lineNumber":4329},{"code":"struct dentry *dentry","lineNumber":4307},{"code":"struct inode *dir","lineNumber":4306},{"code":"struct inode *dir","lineNumber":4306}]}
{"lineNumber":4340,"condition":["!error && dentry->d_flags & DCACHE_NFSFS_RENAMED"],"assignments":[{"code":"struct dentry *dentry","lineNumber":4307},{"code":"error = try_break_deleg(target, delegated_inode)","lineNumber":4326},{"code":"error = -EBUSY","lineNumber":4322},{"code":"error = -EPERM","lineNumber":4320},{"code":"error = security_inode_unlink(dir, dentry)","lineNumber":4324},{"code":"struct inode **delegated_inode","lineNumber":4307},{"code":"error = dir->i_op->unlink(dir, dentry)","lineNumber":4329},{"code":"struct inode *dir","lineNumber":4306}]}
{"lineNumber":4342,"condition":["!error"],"assignments":[{"code":"error = try_break_deleg(target, delegated_inode)","lineNumber":4326},{"code":"error = -EBUSY","lineNumber":4322},{"code":"error = -EPERM","lineNumber":4320},{"code":"error = security_inode_unlink(dir, dentry)","lineNumber":4324},{"code":"struct inode **delegated_inode","lineNumber":4307},{"code":"error = dir->i_op->unlink(dir, dentry)","lineNumber":4329},{"code":"struct dentry *dentry","lineNumber":4307},{"code":"struct dentry *dentry","lineNumber":4307}]}
{"lineNumber":4369,"condition":["error"],"assignments":[]}
{"lineNumber":4373,"condition":["type != LAST_NORM"],"assignments":[]}
{"lineNumber":4377,"condition":["error"],"assignments":[]}
{"lineNumber":4383,"condition":["!IS_ERR(dentry)"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4381}]}
{"lineNumber":4386,"condition":["last.name[last.len]"],"assignments":[]}
{"lineNumber":4389,"condition":["d_is_negative(dentry)"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4381}]}
{"lineNumber":4393,"condition":["error"],"assignments":[]}
{"lineNumber":4401,"condition":["inode"],"assignments":[]}
{"lineNumber":4404,"condition":["delegated_inode"],"assignments":[]}
{"lineNumber":4406,"condition":["!error"],"assignments":[{"code":"error = break_deleg_wait(&delegated_inode)","lineNumber":4405},{"code":"*delegated_inode = NULL","lineNumber":4365}]}
{"lineNumber":4412,"condition":["retry_estale(error, lookup_flags)"],"assignments":[{"code":"error = -EISDIR","lineNumber":4372},{"code":"error = mnt_want_write(path.mnt)","lineNumber":4376},{"code":"error = PTR_ERR(dentry)","lineNumber":4382},{"code":"error = security_path_unlink(&path, dentry)","lineNumber":4392},{"code":"error = vfs_unlink(mnt_idmap(path.mnt), path.dentry->d_inode,\n\t\t\t\t   dentry, &delegated_inode)","lineNumber":4395},{"code":"error = -ENOTDIR","lineNumber":4427},{"code":"error = -EISDIR","lineNumber":4425},{"code":"error = -ENOENT","lineNumber":4423},{"code":"error = break_deleg_wait(&delegated_inode)","lineNumber":4405},{"code":"lookup_flags = 0","lineNumber":4366},{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4381},{"code":"*delegated_inode = NULL","lineNumber":4365}]}
{"lineNumber":4422,"condition":["d_is_negative(dentry)"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4381}]}
{"lineNumber":4424,"condition":["d_is_dir(dentry)"],"assignments":[{"code":"dentry = lookup_one_qstr_excl(&last, path.dentry, lookup_flags)","lineNumber":4381}]}
{"lineNumber":4467,"condition":["error"],"assignments":[]}
{"lineNumber":4470,"condition":["!dir->i_op->symlink"],"assignments":[{"code":"struct inode *dir","lineNumber":4461}]}
{"lineNumber":4474,"condition":["error"],"assignments":[]}
{"lineNumber":4478,"condition":["!error"],"assignments":[{"code":"error = dir->i_op->symlink(idmap, dir, dentry, oldname)","lineNumber":4477},{"code":"struct mnt_idmap *idmap","lineNumber":4461},{"code":"const char *oldname","lineNumber":4462},{"code":"struct inode *dir","lineNumber":4461},{"code":"struct inode *dir","lineNumber":4461},{"code":"struct dentry *dentry","lineNumber":4462}]}
{"lineNumber":4491,"condition":["IS_ERR(from)"],"assignments":[{"code":"struct filename *from","lineNumber":4484}]}
{"lineNumber":4498,"condition":["IS_ERR(dentry)"],"assignments":[{"code":"dentry = filename_create(newdfd, to, &path, lookup_flags)","lineNumber":4496},{"code":"int newdfd","lineNumber":4484},{"code":"struct filename *to","lineNumber":4484},{"code":"lookup_flags = 0","lineNumber":4489}]}
{"lineNumber":4502,"condition":["!error"],"assignments":[{"code":"error = security_path_symlink(&path, dentry, from->name)","lineNumber":4501},{"code":"struct filename *from","lineNumber":4484}]}
{"lineNumber":4506,"condition":["retry_estale(error, lookup_flags)"],"assignments":[{"code":"error = vfs_symlink(mnt_idmap(path.mnt), path.dentry->d_inode,\n\t\t\t\t    dentry, from->name)","lineNumber":4503},{"code":"error = security_path_symlink(&path, dentry, from->name)","lineNumber":4501},{"code":"lookup_flags = 0","lineNumber":4489},{"code":"struct filename *from","lineNumber":4484}]}
{"lineNumber":4561,"condition":["!inode"],"assignments":[{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct dentry *old_dentry","lineNumber":4553}]}
{"lineNumber":4565,"condition":["error"],"assignments":[]}
{"lineNumber":4568,"condition":["dir->i_sb != inode->i_sb"],"assignments":[{"code":"struct inode *dir","lineNumber":4554},{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct dentry *old_dentry","lineNumber":4553}]}
{"lineNumber":4574,"condition":["IS_APPEND(inode) || IS_IMMUTABLE(inode)"],"assignments":[{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct dentry *old_dentry","lineNumber":4553}]}
{"lineNumber":4581,"condition":["HAS_UNMAPPED_ID(idmap, inode)"],"assignments":[{"code":"struct mnt_idmap *idmap","lineNumber":4553},{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct dentry *old_dentry","lineNumber":4553},{"code":"struct dentry *old_dentry","lineNumber":4553}]}
{"lineNumber":4583,"condition":["!dir->i_op->link"],"assignments":[{"code":"struct inode *dir","lineNumber":4554}]}
{"lineNumber":4585,"condition":["S_ISDIR(inode->i_mode)"],"assignments":[{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct mnt_idmap *idmap","lineNumber":4553},{"code":"struct dentry *old_dentry","lineNumber":4553}]}
{"lineNumber":4589,"condition":["error"],"assignments":[]}
{"lineNumber":4594,"condition":["inode->i_nlink == 0 && !(inode->i_state & I_LINKABLE)"],"assignments":[{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct dentry *old_dentry","lineNumber":4553},{"code":"struct mnt_idmap *idmap","lineNumber":4553},{"code":"struct mnt_idmap *idmap","lineNumber":4553},{"code":"struct dentry *old_dentry","lineNumber":4553},{"code":"struct mnt_idmap *idmap","lineNumber":4553},{"code":"struct mnt_idmap *idmap","lineNumber":4553}]}
{"lineNumber":4596,"condition":["max_links && inode->i_nlink >= max_links"],"assignments":[{"code":"max_links = dir->i_sb->s_max_links","lineNumber":4558},{"code":"max_links = dir->i_sb->s_max_links","lineNumber":4558},{"code":"struct inode *dir","lineNumber":4554},{"code":"struct inode *dir","lineNumber":4554},{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct dentry *old_dentry","lineNumber":4553},{"code":"struct mnt_idmap *idmap","lineNumber":4553},{"code":"struct mnt_idmap *idmap","lineNumber":4553}]}
{"lineNumber":4600,"condition":["!error"],"assignments":[{"code":"error = try_break_deleg(inode, delegated_inode)","lineNumber":4599},{"code":"struct inode **delegated_inode","lineNumber":4555}]}
{"lineNumber":4604,"condition":["!error && (inode->i_state & I_LINKABLE)"],"assignments":[{"code":"error = dir->i_op->link(old_dentry, dir, new_dentry)","lineNumber":4601},{"code":"error = -EMLINK","lineNumber":4597},{"code":"error =  -ENOENT","lineNumber":4595},{"code":"error = try_break_deleg(inode, delegated_inode)","lineNumber":4599},{"code":"struct dentry *old_dentry","lineNumber":4553},{"code":"struct inode **delegated_inode","lineNumber":4555},{"code":"*inode = old_dentry->d_inode","lineNumber":4557},{"code":"struct inode *dir","lineNumber":4554},{"code":"struct inode *dir","lineNumber":4554},{"code":"struct inode *dir","lineNumber":4554},{"code":"struct inode *dir","lineNumber":4554},{"code":"struct dentry *new_dentry","lineNumber":4554},{"code":"struct mnt_idmap *idmap","lineNumber":4553},{"code":"struct mnt_idmap *idmap","lineNumber":4553}]}
{"lineNumber":4610,"condition":["!error"],"assignments":[{"code":"error = dir->i_op->link(old_dentry, dir, new_dentry)","lineNumber":4601},{"code":"error = -EMLINK","lineNumber":4597},{"code":"error =  -ENOENT","lineNumber":4595},{"code":"error = try_break_deleg(inode, delegated_inode)","lineNumber":4599},{"code":"struct dentry *old_dentry","lineNumber":4553},{"code":"struct inode **delegated_inode","lineNumber":4555}]}
{"lineNumber":4635,"condition":["(flags & ~(AT_SYMLINK_FOLLOW | AT_EMPTY_PATH)) != 0"],"assignments":[{"code":"int flags","lineNumber":4626}]}
{"lineNumber":4644,"condition":["flags & AT_EMPTY_PATH && !capable(CAP_DAC_READ_SEARCH)"],"assignments":[{"code":"int flags","lineNumber":4626}]}
{"lineNumber":4649,"condition":["flags & AT_SYMLINK_FOLLOW"],"assignments":[{"code":"int flags","lineNumber":4626}]}
{"lineNumber":4653,"condition":["error"],"assignments":[]}
{"lineNumber":4659,"condition":["IS_ERR(new_dentry)"],"assignments":[{"code":"new_dentry = filename_create(newdfd, new, &new_path,\n\t\t\t\t\t(how & LOOKUP_REVAL))","lineNumber":4656},{"code":"int newdfd","lineNumber":4625},{"code":"struct filename *new","lineNumber":4626}]}
{"lineNumber":4663,"condition":["old_path.mnt != new_path.mnt"],"assignments":[]}
{"lineNumber":4667,"condition":["unlikely(error)"],"assignments":[{"code":"error = may_linkat(idmap, &old_path)","lineNumber":4666},{"code":"idmap = mnt_idmap(new_path.mnt)","lineNumber":4665}]}
{"lineNumber":4670,"condition":["error"],"assignments":[]}
{"lineNumber":4676,"condition":["delegated_inode"],"assignments":[]}
{"lineNumber":4678,"condition":["!error"],"assignments":[{"code":"error = break_deleg_wait(&delegated_inode)","lineNumber":4677},{"code":"*delegated_inode = NULL","lineNumber":4631}]}
{"lineNumber":4683,"condition":["retry_estale(error, how)"],"assignments":[{"code":"error = -EXDEV","lineNumber":4662},{"code":"error = security_path_link(old_path.dentry, &new_path, new_dentry)","lineNumber":4669},{"code":"error = vfs_link(old_path.dentry, idmap, new_path.dentry->d_inode,\n\t\t\t new_dentry, &delegated_inode)","lineNumber":4672},{"code":"error = may_linkat(idmap, &old_path)","lineNumber":4666},{"code":"error = break_deleg_wait(&delegated_inode)","lineNumber":4677},{"code":"*delegated_inode = NULL","lineNumber":4631},{"code":"how = 0","lineNumber":4632},{"code":"idmap = mnt_idmap(new_path.mnt)","lineNumber":4665},{"code":"idmap = mnt_idmap(new_path.mnt)","lineNumber":4665}]}
{"lineNumber":4769,"condition":["source == target"],"assignments":[{"code":"*source = old_dentry->d_inode","lineNumber":4763},{"code":"*target = new_dentry->d_inode","lineNumber":4764},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"struct renamedata *rd","lineNumber":4754}]}
{"lineNumber":4773,"condition":["error"],"assignments":[]}
{"lineNumber":4776,"condition":["!target"],"assignments":[{"code":"*target = new_dentry->d_inode","lineNumber":4764},{"code":"*source = old_dentry->d_inode","lineNumber":4763},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759}]}
{"lineNumber":4781,"condition":["!(flags & RENAME_EXCHANGE)"],"assignments":[{"code":"flags = rd->flags","lineNumber":4761},{"code":"struct renamedata *rd","lineNumber":4754}]}
{"lineNumber":4788,"condition":["error"],"assignments":[]}
{"lineNumber":4791,"condition":["!old_dir->i_op->rename"],"assignments":[{"code":"*old_dir = rd->old_dir","lineNumber":4757},{"code":"struct renamedata *rd","lineNumber":4754}]}
{"lineNumber":4798,"condition":["new_dir != old_dir"],"assignments":[{"code":"*new_dir = rd->new_dir","lineNumber":4757},{"code":"*new_dir = rd->new_dir","lineNumber":4757},{"code":"*new_dir = rd->new_dir","lineNumber":4757},{"code":"*old_dir = rd->old_dir","lineNumber":4757},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754}]}
{"lineNumber":4799,"condition":["is_dir"],"assignments":[]}
{"lineNumber":4802,"condition":["error"],"assignments":[]}
{"lineNumber":4805,"condition":["(flags & RENAME_EXCHANGE) && new_is_dir"],"assignments":[{"code":"flags = rd->flags","lineNumber":4761},{"code":"new_is_dir = false","lineNumber":4765},{"code":"new_is_dir = d_is_dir(new_dentry)","lineNumber":4779},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759}]}
{"lineNumber":4808,"condition":["error"],"assignments":[]}
{"lineNumber":4815,"condition":["error"],"assignments":[]}
{"lineNumber":4832,"condition":["IS_SWAPFILE(source) || (target && IS_SWAPFILE(target))"],"assignments":[{"code":"*source = old_dentry->d_inode","lineNumber":4763},{"code":"*target = new_dentry->d_inode","lineNumber":4764},{"code":"*target = new_dentry->d_inode","lineNumber":4764},{"code":"*target = new_dentry->d_inode","lineNumber":4764}]}
{"lineNumber":4836,"condition":["is_local_mountpoint(old_dentry) || is_local_mountpoint(new_dentry)"],"assignments":[{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"flags = rd->flags","lineNumber":4761},{"code":"flags = rd->flags","lineNumber":4761}]}
{"lineNumber":4839,"condition":["max_links && new_dir != old_dir"],"assignments":[{"code":"max_links = new_dir->i_sb->s_max_links","lineNumber":4766},{"code":"*new_dir = rd->new_dir","lineNumber":4757},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"*old_dir = rd->old_dir","lineNumber":4757},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758}]}
{"lineNumber":4841,"condition":["is_dir && !new_is_dir && new_dir->i_nlink >= max_links"],"assignments":[{"code":"new_is_dir = false","lineNumber":4765},{"code":"new_is_dir = d_is_dir(new_dentry)","lineNumber":4779},{"code":"is_dir = d_is_dir(old_dentry)","lineNumber":4762},{"code":"max_links = new_dir->i_sb->s_max_links","lineNumber":4766},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*new_dir = rd->new_dir","lineNumber":4757},{"code":"*new_dir = rd->new_dir","lineNumber":4757},{"code":"*new_dir = rd->new_dir","lineNumber":4757},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"*new_dir = rd->new_dir","lineNumber":4757}]}
{"lineNumber":4843,"condition":["(flags & RENAME_EXCHANGE) && !is_dir && new_is_dir &&\n\t\t    old_dir->i_nlink >= max_links"],"assignments":[{"code":"new_is_dir = false","lineNumber":4765},{"code":"new_is_dir = d_is_dir(new_dentry)","lineNumber":4779},{"code":"flags = rd->flags","lineNumber":4761},{"code":"max_links = new_dir->i_sb->s_max_links","lineNumber":4766},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"is_dir = d_is_dir(old_dentry)","lineNumber":4762},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"*old_dir = rd->old_dir","lineNumber":4757},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"*new_dir = rd->new_dir","lineNumber":4757}]}
{"lineNumber":4847,"condition":["!is_dir"],"assignments":[{"code":"is_dir = d_is_dir(old_dentry)","lineNumber":4762},{"code":"new_is_dir = false","lineNumber":4765},{"code":"new_is_dir = d_is_dir(new_dentry)","lineNumber":4779},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758}]}
{"lineNumber":4849,"condition":["error"],"assignments":[]}
{"lineNumber":4852,"condition":["target && !new_is_dir"],"assignments":[{"code":"new_is_dir = false","lineNumber":4765},{"code":"new_is_dir = d_is_dir(new_dentry)","lineNumber":4779},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"*target = new_dentry->d_inode","lineNumber":4764},{"code":"*source = old_dentry->d_inode","lineNumber":4763},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"struct renamedata *rd","lineNumber":4754}]}
{"lineNumber":4854,"condition":["error"],"assignments":[]}
{"lineNumber":4859,"condition":["error"],"assignments":[]}
{"lineNumber":4862,"condition":["!(flags & RENAME_EXCHANGE) && target"],"assignments":[{"code":"struct renamedata *rd","lineNumber":4754},{"code":"flags = rd->flags","lineNumber":4761},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"flags = rd->flags","lineNumber":4761},{"code":"new_is_dir = false","lineNumber":4765},{"code":"new_is_dir = d_is_dir(new_dentry)","lineNumber":4779},{"code":"**delegated_inode = rd->delegated_inode","lineNumber":4760},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758}]}
{"lineNumber":4863,"condition":["is_dir"],"assignments":[]}
{"lineNumber":4870,"condition":["!(old_dir->i_sb->s_type->fs_flags & FS_RENAME_DOES_D_MOVE)"],"assignments":[{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"flags = rd->flags","lineNumber":4761},{"code":"flags = rd->flags","lineNumber":4761},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758}]}
{"lineNumber":4871,"condition":["!(flags & RENAME_EXCHANGE)"],"assignments":[{"code":"struct renamedata *rd","lineNumber":4754},{"code":"flags = rd->flags","lineNumber":4761},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"flags = rd->flags","lineNumber":4761},{"code":"flags = rd->flags","lineNumber":4761}]}
{"lineNumber":4878,"condition":["target"],"assignments":[]}
{"lineNumber":4881,"condition":["!error"],"assignments":[{"code":"error = -EPERM","lineNumber":4831},{"code":"error = -EBUSY","lineNumber":4835},{"code":"error = -EMLINK","lineNumber":4840},{"code":"error = try_break_deleg(source, delegated_inode)","lineNumber":4848},{"code":"error = try_break_deleg(target, delegated_inode)","lineNumber":4853},{"code":"error = old_dir->i_op->rename(rd->new_mnt_idmap, old_dir, old_dentry,\n\t\t\t\t      new_dir, new_dentry, flags)","lineNumber":4857},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"**delegated_inode = rd->delegated_inode","lineNumber":4760},{"code":"**delegated_inode = rd->delegated_inode","lineNumber":4760},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"*old_dentry = rd->old_dentry","lineNumber":4758},{"code":"flags = rd->flags","lineNumber":4761}]}
{"lineNumber":4884,"condition":["flags & RENAME_EXCHANGE"],"assignments":[{"code":"flags = rd->flags","lineNumber":4761},{"code":"struct renamedata *rd","lineNumber":4754},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759},{"code":"*new_dentry = rd->new_dentry","lineNumber":4759}]}
{"lineNumber":4909,"condition":["flags & ~(RENAME_NOREPLACE | RENAME_EXCHANGE | RENAME_WHITEOUT)"],"assignments":[{"code":"unsigned int flags","lineNumber":4896}]}
{"lineNumber":4912,"condition":["(flags & (RENAME_NOREPLACE | RENAME_WHITEOUT)) &&\n\t    (flags & RENAME_EXCHANGE)"],"assignments":[{"code":"unsigned int flags","lineNumber":4896}]}
{"lineNumber":4916,"condition":["flags & RENAME_EXCHANGE"],"assignments":[{"code":"unsigned int flags","lineNumber":4896}]}
{"lineNumber":4922,"condition":["error"],"assignments":[]}
{"lineNumber":4927,"condition":["error"],"assignments":[]}
{"lineNumber":4931,"condition":["old_path.mnt != new_path.mnt"],"assignments":[]}
{"lineNumber":4935,"condition":["old_type != LAST_NORM"],"assignments":[]}
{"lineNumber":4938,"condition":["flags & RENAME_NOREPLACE"],"assignments":[{"code":"unsigned int flags","lineNumber":4896}]}
{"lineNumber":4940,"condition":["new_type != LAST_NORM"],"assignments":[]}
{"lineNumber":4944,"condition":["error"],"assignments":[]}
{"lineNumber":4953,"condition":["IS_ERR(old_dentry)"],"assignments":[{"code":"old_dentry = lookup_one_qstr_excl(&old_last, old_path.dentry,\n\t\t\t\t\t  lookup_flags)","lineNumber":4950}]}
{"lineNumber":4957,"condition":["d_is_negative(old_dentry)"],"assignments":[{"code":"old_dentry = lookup_one_qstr_excl(&old_last, old_path.dentry,\n\t\t\t\t\t  lookup_flags)","lineNumber":4950}]}
{"lineNumber":4962,"condition":["IS_ERR(new_dentry)"],"assignments":[{"code":"new_dentry = lookup_one_qstr_excl(&new_last, new_path.dentry,\n\t\t\t\t\t  lookup_flags | target_flags)","lineNumber":4959},{"code":"target_flags = LOOKUP_RENAME_TARGET","lineNumber":4905},{"code":"target_flags = 0","lineNumber":4917}]}
{"lineNumber":4965,"condition":["(flags & RENAME_NOREPLACE) && d_is_positive(new_dentry)"],"assignments":[{"code":"new_dentry = lookup_one_qstr_excl(&new_last, new_path.dentry,\n\t\t\t\t\t  lookup_flags | target_flags)","lineNumber":4959},{"code":"unsigned int flags","lineNumber":4896}]}
{"lineNumber":4967,"condition":["flags & RENAME_EXCHANGE"],"assignments":[{"code":"unsigned int flags","lineNumber":4896}]}
{"lineNumber":4969,"condition":["d_is_negative(new_dentry)"],"assignments":[{"code":"new_dentry = lookup_one_qstr_excl(&new_last, new_path.dentry,\n\t\t\t\t\t  lookup_flags | target_flags)","lineNumber":4959}]}
{"lineNumber":4972,"condition":["!d_is_dir(new_dentry)"],"assignments":[{"code":"new_dentry = lookup_one_qstr_excl(&new_last, new_path.dentry,\n\t\t\t\t\t  lookup_flags | target_flags)","lineNumber":4959}]}
{"lineNumber":4974,"condition":["new_last.name[new_last.len]"],"assignments":[]}
{"lineNumber":4979,"condition":["!d_is_dir(old_dentry)"],"assignments":[{"code":"old_dentry = lookup_one_qstr_excl(&old_last, old_path.dentry,\n\t\t\t\t\t  lookup_flags)","lineNumber":4950}]}
{"lineNumber":4981,"condition":["old_last.name[old_last.len]"],"assignments":[]}
{"lineNumber":4983,"condition":["!(flags & RENAME_EXCHANGE) && new_last.name[new_last.len]"],"assignments":[]}
{"lineNumber":4988,"condition":["old_dentry == trap"],"assignments":[{"code":"trap = lock_rename(new_path.dentry, old_path.dentry)","lineNumber":4948}]}
{"lineNumber":4991,"condition":["!(flags & RENAME_EXCHANGE)"],"assignments":[]}
{"lineNumber":4993,"condition":["new_dentry == trap"],"assignments":[{"code":"trap = lock_rename(new_path.dentry, old_path.dentry)","lineNumber":4948},{"code":"new_dentry = lookup_one_qstr_excl(&new_last, new_path.dentry,\n\t\t\t\t\t  lookup_flags | target_flags)","lineNumber":4959}]}
{"lineNumber":4998,"condition":["error"],"assignments":[]}
{"lineNumber":5016,"condition":["delegated_inode"],"assignments":[]}
{"lineNumber":5018,"condition":["!error"],"assignments":[{"code":"error = break_deleg_wait(&delegated_inode)","lineNumber":5017},{"code":"*delegated_inode = NULL","lineNumber":4904}]}
{"lineNumber":5023,"condition":["retry_estale(error, lookup_flags)"],"assignments":[{"code":"error = -EXDEV","lineNumber":4930},{"code":"error = -EBUSY","lineNumber":4934},{"code":"error = -EEXIST","lineNumber":4939},{"code":"error = mnt_want_write(old_path.mnt)","lineNumber":4943},{"code":"error = PTR_ERR(old_dentry)","lineNumber":4952},{"code":"error = -ENOENT","lineNumber":4956},{"code":"error = PTR_ERR(new_dentry)","lineNumber":4961},{"code":"error = -EEXIST","lineNumber":4964},{"code":"error = -ENOENT","lineNumber":4968},{"code":"error = -ENOTDIR","lineNumber":4973},{"code":"error = -ENOTDIR","lineNumber":4980},{"code":"error = -EINVAL","lineNumber":4987},{"code":"error = -ENOTEMPTY","lineNumber":4992},{"code":"error = security_path_rename(&old_path, old_dentry,\n\t\t\t\t     &new_path, new_dentry, flags)","lineNumber":4996},{"code":"error = vfs_rename(&rd)","lineNumber":5009},{"code":"error = break_deleg_wait(&delegated_inode)","lineNumber":5017},{"code":"old_dentry = lookup_one_qstr_excl(&old_last, old_path.dentry,\n\t\t\t\t\t  lookup_flags)","lineNumber":4950},{"code":"new_dentry = lookup_one_qstr_excl(&new_last, new_path.dentry,\n\t\t\t\t\t  lookup_flags | target_flags)","lineNumber":4959},{"code":"lookup_flags = 0","lineNumber":4905},{"code":"target_flags = LOOKUP_RENAME_TARGET","lineNumber":4905},{"code":"target_flags = 0","lineNumber":4917},{"code":"*delegated_inode = NULL","lineNumber":4904}]}
{"lineNumber":5028,"condition":["should_retry"],"assignments":[]}
{"lineNumber":5131,"condition":["d_is_symlink(dentry)"],"assignments":[{"code":"struct dentry *dentry","lineNumber":5126}]}
{"lineNumber":5133,"condition":["!res"],"assignments":[{"code":"res = ERR_PTR(security_inode_readlink(dentry))","lineNumber":5132},{"code":"struct dentry *dentry","lineNumber":5126}]}
{"lineNumber":5148,"condition":["!dentry"],"assignments":[{"code":"struct dentry *dentry","lineNumber":5141}]}
{"lineNumber":5150,"condition":["!page"],"assignments":[{"code":"page = find_get_page(mapping, 0)","lineNumber":5149},{"code":"*mapping = inode->i_mapping","lineNumber":5146},{"code":"struct inode *inode","lineNumber":5141}]}
{"lineNumber":5152,"condition":["!PageUptodate(page)"],"assignments":[{"code":"page = find_get_page(mapping, 0)","lineNumber":5149},{"code":"*mapping = inode->i_mapping","lineNumber":5146}]}
{"lineNumber":5158,"condition":["IS_ERR(page)"],"assignments":[{"code":"page = read_mapping_page(mapping, 0, NULL)","lineNumber":5157},{"code":"*mapping = inode->i_mapping","lineNumber":5146},{"code":"struct inode *inode","lineNumber":5141}]}
{"lineNumber":5198,"condition":["nofs"],"assignments":[]}
{"lineNumber":5201,"condition":["nofs"],"assignments":[]}
{"lineNumber":5203,"condition":["err"],"assignments":[]}
{"lineNumber":5210,"condition":["err < 0"],"assignments":[{"code":"err = aops->write_end(NULL, mapping, 0, len-1, len-1,\n\t\t\t\t\t\t\tpage, fsdata)","lineNumber":5208},{"code":"*aops = mapping->a_ops","lineNumber":5190},{"code":"*mapping = inode->i_mapping","lineNumber":5189},{"code":"*fsdata = NULL","lineNumber":5193},{"code":"int len","lineNumber":5187},{"code":"int len","lineNumber":5187},{"code":"struct inode *inode","lineNumber":5187},{"code":"int len","lineNumber":5187}]}
{"lineNumber":5212,"condition":["err < len-1"],"assignments":[{"code":"err = aops->write_end(NULL, mapping, 0, len-1, len-1,\n\t\t\t\t\t\t\tpage, fsdata)","lineNumber":5208},{"code":"*aops = mapping->a_ops","lineNumber":5190},{"code":"*mapping = inode->i_mapping","lineNumber":5189},{"code":"*fsdata = NULL","lineNumber":5193},{"code":"int len","lineNumber":5187}]}

